{
	"name": "DF - AZSQLDB WITH UNION AND EXISTS TRANSFORMATION",
	"properties": {
		"folder": {
			"name": "MASTER_DATAFACTORY_DATAFLOW"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_AZSQLDB_SOURCE_ONE_DF",
						"type": "DatasetReference"
					},
					"name": "EmployeeSource"
				},
				{
					"dataset": {
						"referenceName": "DS_AZSQLDB_SOURCE_TWO_DF",
						"type": "DatasetReference"
					},
					"name": "EmployeeSourcePartTwo"
				},
				{
					"dataset": {
						"referenceName": "DS_AZSQLBD_COMPLETE_DF",
						"type": "DatasetReference"
					},
					"name": "EmployeeDataSinkForCheck"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_AZSQLBD_COMPLETE_DF",
						"type": "DatasetReference"
					},
					"name": "CompleteEmployeeSinkData"
				}
			],
			"transformations": [
				{
					"name": "EmployeeDataUnion"
				},
				{
					"name": "CheckForNotExistsOfData"
				}
			],
			"script": "source(output(\n\t\tEmpID as integer,\n\t\tEmpName as string,\n\t\tDesignation as string,\n\t\tDepartment as string,\n\t\tJoiningDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> EmployeeSource\nsource(output(\n\t\tEmpID as integer,\n\t\tEmpName as string,\n\t\tDesignation as string,\n\t\tDepartment as string,\n\t\tJoiningDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> EmployeeSourcePartTwo\nsource(output(\n\t\tEmpID as integer,\n\t\tEmpName as string,\n\t\tDesignation as string,\n\t\tDepartment as string,\n\t\tJoiningDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> EmployeeDataSinkForCheck\nEmployeeSource, EmployeeSourcePartTwo union(byName: true)~> EmployeeDataUnion\nEmployeeDataUnion, EmployeeDataSinkForCheck exists(EmployeeDataUnion@EmpID == EmployeeDataSinkForCheck@EmpID,\n\tnegate:true,\n\tbroadcast: 'auto')~> CheckForNotExistsOfData\nCheckForNotExistsOfData sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tEmpID as integer,\n\t\tEmpName as string,\n\t\tDesignation as string,\n\t\tDepartment as string,\n\t\tJoiningDate as timestamp\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> CompleteEmployeeSinkData"
		}
	}
}