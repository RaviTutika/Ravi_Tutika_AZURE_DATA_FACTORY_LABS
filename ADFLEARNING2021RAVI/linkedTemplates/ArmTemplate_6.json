{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADFLEARNING2021RAVI"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_12_CASE_06_COPY_AZSQL_TABLE_STORAGE_CONTAINER_STORED_PROCEDURE_OVVER_WRITE_MODE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - AZSQL TO STORAGE ACCOUNT",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DELETE EXISTING FILES",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[USP_GetSalesOrderDetails]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZSQLDB_SALESORDER_DETAILS_INPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZSQLSTORAGE_OUTPUT_FROM_SQLDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DELETE EXISTING FILES",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_AZSQLSTORAGE_OUTPUT_FROM_SQLDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-12T17:42:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_13_COPY_AZ_SQLDB_SQLDB_PARAMETERS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - AZ SQL TO AZ SQL PARAM",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZSQLDB_INPUT_PARAM",
								"type": "DatasetReference",
								"parameters": {
									"DS_SOURCE_SCHEMA_NAME": {
										"value": "@pipeline().parameters.PL_SOURCE_SCHEMA_PARAM",
										"type": "Expression"
									},
									"DS_SOURCE_TABLE_NAME": {
										"value": "@pipeline().parameters.PL_SOURCE_TABLE_PARAM",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZSQL_DB_DESTINATION",
								"type": "DatasetReference",
								"parameters": {
									"DS_SINK_SCHEMA_NAME": {
										"value": "@pipeline().parameters.PL_SINK_SCHEMA_PARAM",
										"type": "Expression"
									},
									"DS_SINK_TABLE_NAME": {
										"value": "@pipeline().parameters.PL_SINK_TABLE_PARAM",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"PL_SOURCE_SCHEMA_PARAM": {
						"type": "string"
					},
					"PL_SOURCE_TABLE_PARAM": {
						"type": "string"
					},
					"PL_SINK_SCHEMA_PARAM": {
						"type": "string"
					},
					"PL_SINK_TABLE_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-12T17:42:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_14_CASE_01_COPY_AZ_SQLDB_SQLDB_PARAMETERS_APPEND_MODE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - AZ SQL TO AZ SQL PARAM",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZSQLDB_INPUT_PARAM",
								"type": "DatasetReference",
								"parameters": {
									"DS_SOURCE_SCHEMA_NAME": {
										"value": "@pipeline().parameters.PL_SOURCE_SCHEMA_PARAM",
										"type": "Expression"
									},
									"DS_SOURCE_TABLE_NAME": {
										"value": "@pipeline().parameters.PL_SOURCE_TABLE_PARAM",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZSQL_DB_DESTINATION",
								"type": "DatasetReference",
								"parameters": {
									"DS_SINK_SCHEMA_NAME": {
										"value": "@pipeline().parameters.PL_SINK_SCHEMA_PARAM",
										"type": "Expression"
									},
									"DS_SINK_TABLE_NAME": {
										"value": "@pipeline().parameters.PL_SINK_TABLE_PARAM",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"PL_SOURCE_SCHEMA_PARAM": {
						"type": "string"
					},
					"PL_SOURCE_TABLE_PARAM": {
						"type": "string"
					},
					"PL_SINK_SCHEMA_PARAM": {
						"type": "string"
					},
					"PL_SINK_TABLE_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-12T17:42:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_14_CASE_02_COPY_AZ_SQLDB_SQLDB_PARAMETERS_OVERWRITE_MODE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - AZ SQL TO AZ SQL PARAM",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "@{concat('TRUNCATE ','TABLE ' ,pipeline().parameters.PL_SINK_SCHEMA_PARAM,'.',pipeline().parameters.PL_SINK_TABLE_PARAM)}",
									"type": "Expression"
								},
								"writeBehavior": "insert",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZSQLDB_INPUT_PARAM",
								"type": "DatasetReference",
								"parameters": {
									"DS_SOURCE_SCHEMA_NAME": {
										"value": "@pipeline().parameters.PL_SOURCE_SCHEMA_PARAM",
										"type": "Expression"
									},
									"DS_SOURCE_TABLE_NAME": {
										"value": "@pipeline().parameters.PL_SOURCE_TABLE_PARAM",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZSQL_DB_DESTINATION",
								"type": "DatasetReference",
								"parameters": {
									"DS_SINK_SCHEMA_NAME": {
										"value": "@pipeline().parameters.PL_SINK_SCHEMA_PARAM",
										"type": "Expression"
									},
									"DS_SINK_TABLE_NAME": {
										"value": "@pipeline().parameters.PL_SINK_TABLE_PARAM",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"PL_SOURCE_SCHEMA_PARAM": {
						"type": "string"
					},
					"PL_SOURCE_TABLE_PARAM": {
						"type": "string"
					},
					"PL_SINK_SCHEMA_PARAM": {
						"type": "string"
					},
					"PL_SINK_TABLE_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-12T17:42:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_15_BULK_TABLE_LOAD_TO_STORAGE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LOOKUP - AZSQLBULK LOAD",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AZSQL_BULLOAD_TABLE_METADATA_STORAGE",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOR EACH - LOOP THROUGH META DATA",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LOOKUP - AZSQLBULK LOAD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LOOKUP - AZSQLBULK LOAD').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GET META DATA - TABLE EXISTENCE",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_AZSQL_SCHEMA_TABLE_INPUT",
											"type": "DatasetReference",
											"parameters": {
												"DS_SCHEMA_NAME_PARAM": {
													"value": "@item().SchemaName",
													"type": "Expression"
												},
												"DS_TABLE_NAME_PARAM": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists"
										]
									}
								},
								{
									"name": "IF CONDITION - CHECK FOR TABLE EXISTENCE",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GET META DATA - TABLE EXISTENCE",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('GET META DATA - TABLE EXISTENCE').output.Exists",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "WAIT ACTIVTY IF TABLE NOT EXISTS",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 2
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "COPY DATA FROM AZURE SQL TO AZURE STORAG",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_AZSQL_SCHEMA_TABLE_INPUT",
														"type": "DatasetReference",
														"parameters": {
															"DS_SCHEMA_NAME_PARAM": {
																"value": "@item().SchemaName",
																"type": "Expression"
															},
															"DS_TABLE_NAME_PARAM": {
																"value": "@item().TableName",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_BULKBLOBSTORAGE_FROM_SQL_OUTPUT",
														"type": "DatasetReference",
														"parameters": {
															"DS_CONTAINER_NAME_PARAM": {
																"value": "@item().SinkContaineName",
																"type": "Expression"
															},
															"DS_FILE_NAME_PARAM": {
																"value": "@item().SinkFileName",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-12T17:42:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_16_CASE_01_BULK_TABLE_LOAD_TO_STORAGE_AUDIT_LOGS_SUCCESS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LOOKUP - AZSQLBULK LOAD",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AZSQL_BULLOAD_TABLE_METADATA_STORAGE",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOR EACH - LOOP THROUGH META DATA",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LOOKUP - AZSQLBULK LOAD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LOOKUP - AZSQLBULK LOAD').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GET META DATA - TABLE EXISTENCE",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_AZSQL_SCHEMA_TABLE_INPUT",
											"type": "DatasetReference",
											"parameters": {
												"DS_SCHEMA_NAME_PARAM": {
													"value": "@item().SchemaName",
													"type": "Expression"
												},
												"DS_TABLE_NAME_PARAM": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists"
										]
									}
								},
								{
									"name": "IF CONDITION - CHECK FOR TABLE EXISTENCE",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GET META DATA - TABLE EXISTENCE",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('GET META DATA - TABLE EXISTENCE').output.Exists",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "WAIT ACTIVTY IF TABLE NOT EXISTS",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 2
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "COPY DATA FROM AZURE SQL TO AZURE STORAG",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_AZSQL_SCHEMA_TABLE_INPUT",
														"type": "DatasetReference",
														"parameters": {
															"DS_SCHEMA_NAME_PARAM": {
																"value": "@item().SchemaName",
																"type": "Expression"
															},
															"DS_TABLE_NAME_PARAM": {
																"value": "@item().TableName",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_BULKBLOBSTORAGE_FROM_SQL_OUTPUT",
														"type": "DatasetReference",
														"parameters": {
															"DS_CONTAINER_NAME_PARAM": {
																"value": "@item().SinkContaineName",
																"type": "Expression"
															},
															"DS_FILE_NAME_PARAM": {
																"value": "@item().SinkFileName",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "STORED PROCEDURE - SUCCESS",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "COPY DATA FROM AZURE SQL TO AZURE STORAG",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_auditlogs_BulkTableLoad]",
													"storedProcedureParameters": {
														"CopyDuration": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').output.copyDuration",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"DataFactoryName": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"EndTime": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').ExecutionEndTime",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"LoadStaus": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').Status",
																"type": "Expression"
															},
															"type": "String"
														},
														"Notification": {
															"value": {
																"value": "@concat(pipeline().Pipeline,' Executed Successfully')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineID": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"RowsRead": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').output.rowsCopied",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"RowsWritten": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').output.rowsRead",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"StartTime": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').ExecutionStartTime",
																"type": "Expression"
															},
															"type": "DateTime"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_AZSQLDB",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "STORED PROCEDURE - FAILURE",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "COPY DATA FROM AZURE SQL TO AZURE STORAG",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_auditlogs_BulkTableLoad]",
													"storedProcedureParameters": {
														"CopyDuration": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').output.copyDuration",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"DataFactoryName": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"EndTime": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').ExecutionEndTime",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"LoadStaus": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').Status",
																"type": "Expression"
															},
															"type": "String"
														},
														"Notification": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').Error",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineID": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"RowsRead": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').output.rowsCopied",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"RowsWritten": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').output.rowsRead",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"StartTime": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').ExecutionStartTime",
																"type": "Expression"
															},
															"type": "DateTime"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_AZSQLDB",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-12T17:42:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_16_CASE_02_BULK_TABLE_LOAD_TO_STORAGE_AUDIT_LOGS_FAILURE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LOOKUP - AZSQLBULK LOAD",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AZSQL_BULLOAD_TABLE_METADATA_STORAGE",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOR EACH - LOOP THROUGH META DATA",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LOOKUP - AZSQLBULK LOAD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LOOKUP - AZSQLBULK LOAD').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GET META DATA - TABLE EXISTENCE",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_AZSQL_SCHEMA_TABLE_INPUT",
											"type": "DatasetReference",
											"parameters": {
												"DS_SCHEMA_NAME_PARAM": {
													"value": "@item().SchemaName",
													"type": "Expression"
												},
												"DS_TABLE_NAME_PARAM": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists"
										]
									}
								},
								{
									"name": "IF CONDITION - CHECK FOR TABLE EXISTENCE",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GET META DATA - TABLE EXISTENCE",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('GET META DATA - TABLE EXISTENCE').output.Exists",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "WAIT ACTIVTY IF TABLE NOT EXISTS",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 2
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "COPY DATA FROM AZURE SQL TO AZURE STORAG",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_AZSQL_SCHEMA_TABLE_INPUT",
														"type": "DatasetReference",
														"parameters": {
															"DS_SCHEMA_NAME_PARAM": {
																"value": "@item().SchemaName",
																"type": "Expression"
															},
															"DS_TABLE_NAME_PARAM": {
																"value": "@item().TableName",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_BULKBLOBSTORAGE_FROM_SQL_OUTPUT",
														"type": "DatasetReference",
														"parameters": {
															"DS_CONTAINER_NAME_PARAM": {
																"value": "@item().SinkContaineName1",
																"type": "Expression"
															},
															"DS_FILE_NAME_PARAM": {
																"value": "@item().SinkFileName",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "STORED PROCEDURE - SUCCESS",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "COPY DATA FROM AZURE SQL TO AZURE STORAG",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_auditlogs_BulkTableLoad]",
													"storedProcedureParameters": {
														"CopyDuration": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').output.copyDuration",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"DataFactoryName": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"EndTime": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').ExecutionEndTime",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"LoadStaus": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').Status",
																"type": "Expression"
															},
															"type": "String"
														},
														"Notification": {
															"value": {
																"value": "@concat(pipeline().Pipeline,' Executed Successfully')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineID": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"RowsRead": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').output.rowsCopied",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"RowsWritten": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').output.rowsRead",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"StartTime": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').ExecutionStartTime",
																"type": "Expression"
															},
															"type": "DateTime"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_AZSQLDB",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "STORED PROCEDURE - FAILURE",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "COPY DATA FROM AZURE SQL TO AZURE STORAG",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_auditlogs_BulkTableLoad]",
													"storedProcedureParameters": {
														"CopyDuration": {
															"value": null,
															"type": "Int32"
														},
														"DataFactoryName": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"EndTime": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').ExecutionEndTime",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"LoadStaus": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').Status",
																"type": "Expression"
															},
															"type": "String"
														},
														"Notification": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').Error",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineID": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"RowsRead": {
															"value": null,
															"type": "Int32"
														},
														"RowsWritten": {
															"value": null,
															"type": "Int32"
														},
														"StartTime": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').ExecutionStartTime",
																"type": "Expression"
															},
															"type": "DateTime"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_AZSQLDB",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-12T17:42:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_24_CASE_01_TUMBLING_WINDOW_TRIGGER_WITHOUT_DEPENDENCY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - GEN2 TUMBLING WINDOW",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_TUMBLING_WINDOW_INPUT",
								"type": "DatasetReference",
								"parameters": {
									"DS_WINDOW_STARTTIME_PARAM": {
										"value": "@pipeline().parameters.PL_WindowEndTime",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_TUMBLING_WINDOW_OUTPUT",
								"type": "DatasetReference",
								"parameters": {
									"DS_SINK_WINDOW_STARTTIME_PARAM": {
										"value": "@pipeline().parameters.PL_WindowStartTime",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"PL_WindowStartTime": {
						"type": "string"
					},
					"PL_WindowEndTime": {
						"type": "string"
					},
					"PL_TriggerTime": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-16T11:12:54Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_29_CASE_01_COPY_DATA_RESTAPI_GEN2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA REST API TO GEN2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_RESTAPI_INPUT",
								"type": "DatasetReference",
								"parameters": {
									"DS_RESTAPI_SOURCE_URL": {
										"value": "@pipeline().parameters.PL_SOURCE_URL_API_PARAM",
										"type": "Expression"
									},
									"DS_RESTAPI_SOURCE_URL_VALUE": {
										"value": "@pipeline().parameters.PL_SOURCE_URL_VALUE_API_PARAM",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZDATAKEGEN2_OUTPUT_RESTAPI",
								"type": "DatasetReference",
								"parameters": {
									"DS_SINKFOLDER_NAME": {
										"value": "@pipeline().parameters.PL_SOURCE_URL_VALUE_API_PARAM",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"PL_SOURCE_URL_API_PARAM": {
						"type": "string"
					},
					"PL_SOURCE_URL_VALUE_API_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-18T06:57:54Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_33_COPY_DATA_AMAZON_S3_GEN2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - AWS S3 TO GEN2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AmazonS3ReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_CLOUD_AWS_INPUT_S3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZSQL_GEN2_S3_OUTPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-19T12:45:52Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_34_COPYDATA_SALESFORCE_GEN2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LOOK UP METADATA - SALES FORCE",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "DS_SALESFORCE_INPTUT_METADATA",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOREACH - LOOP THROUGH METADATA",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LOOK UP METADATA - SALES FORCE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LOOK UP METADATA - SALES FORCE').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "COPY DATA FROM SALES FORCE TO GEN2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"readBehavior": "query"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_SOURCE_INPUT_SALESFORCE",
											"type": "DatasetReference",
											"parameters": {
												"DS_SOURCE_TABLE_PARAM": {
													"value": "@item().sourcenam__c",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AZGEN2_FROM_SALES_FORCE_OUTPUT",
											"type": "DatasetReference",
											"parameters": {
												"DS_SINK_TABLE_PARAM": {
													"value": "@item().sinkname__c",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-19T20:21:12Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_35_COPY_DATA_SNOWFLAKE_TO_GEN2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - SNOW FLAKE TO GEN2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeSource",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "LS_AZBLOB_SAS",
									"type": "LinkedServiceReference"
								},
								"path": "csvinput"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SNOWFALKE_INPUT_FOR_SNOWFLAKE_TO_GEN2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_GEN2_OUTPUT_SNOWFLAKE_TO_GEN2_ACTIVITIY",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-20T02:11:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_37_COPY_EMPLOYEE_DATA_COPY_SWITCH_CASE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - EMPLOYEE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SOURCE_EMPLOYEE_DATA_SWITCH_CASE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SINK_EMPLOYEE_DATA_SWITCH_CASE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-22T14:08:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_37_DELETE_ARCHIEVE_DATA_SWITCH_CASE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DELETE ARCHIEVE DATA",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ARCHIEVE_CUSTOMER_DATA_SWITCH_CASE",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": "*",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-23T01:49:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_37_MOVE_CUSTOMER_DATA_SWITCH_CASE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - CUSTOMER DATA",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_GEN2_INPUT_CUSTOMER_DATA_SWTICH_CASE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SINK_CUSTOMER_DATA_SWITCH_CASE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "COPY DATA CUSTOMER DATA INTO ARCHIEVE",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "COPY DATA - CUSTOMER DATA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_GEN2_INPUT_CUSTOMER_DATA_SWTICH_CASE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ARCHIEVE_CUSTOMER_DATA_SWITCH_CASE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DELETE - CUSTOMER DATA",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "COPY DATA CUSTOMER DATA INTO ARCHIEVE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_GEN2_INPUT_CUSTOMER_DATA_SWTICH_CASE",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": "*",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-23T01:49:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_38_UNTIL_ACTIVITY_WITH_REST_API_CALL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UNTIL ACTIVITY - REST API TO GEN2",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(int(variables('CurrentID')),0)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "COPY DATA REST API TO GEN2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_SOURCE_REST_API_INPUT_UNTIL_ACTIVITY",
											"type": "DatasetReference",
											"parameters": {
												"DS_SOURCE_URL_PARAM": "https://jsonplaceholder.typicode.com/todos/",
												"DS_SOURCE_RELATIVE_URL_PARAM": {
													"value": "@variables('CurrentID')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_SINK_REST_API_GEN2_UNTIL_ACTIVITY",
											"type": "DatasetReference",
											"parameters": {
												"DS_SINK_FOLDER_NAME_PARAM": {
													"value": "@variables('CurrentID')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "CHECK FOR CURRENT VALUE WITH FINAL ID",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "COPY DATA REST API TO GEN2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(int(variables('CurrentID')),int(variables('FinalID')))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "SET TEMPID VALUE",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "tempID",
													"value": {
														"value": "@string(add(int(variables('CurrentID')),1))",
														"type": "Expression"
													}
												}
											},
											{
												"name": "SET CURRENT ID",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "SET TEMPID VALUE",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"variableName": "CurrentID",
													"value": {
														"value": "@variables('tempID')",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "SET CURRENT ID FOR EXIT",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "CurrentID",
													"value": "0"
												}
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"variables": {
					"CurrentID": {
						"type": "String",
						"defaultValue": "1"
					},
					"FinalID": {
						"type": "String",
						"defaultValue": "10"
					},
					"tempID": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-22T13:27:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_39_CHILD_INCREMENTAML_FILE_COPY_WITHPUT_LPV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GET META DATA - GET CHILD ITEMS",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_GEN2_INPUT_GET_FILES_WOUT_LPV",
								"type": "DatasetReference",
								"parameters": {
									"DS_GETFOLDER_FOR_FILES_PARAM": {
										"value": "@pipeline().parameters.PL_CHILD_FOLDER_NAME_PARAM",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "FOREACH LOOP - LOOP THROUGH FILES",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GET META DATA - GET CHILD ITEMS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET META DATA - GET CHILD ITEMS').output.childitems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GET METADATA - LAST MODIFIED",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_SOURCE_GETFILE_LAST_MODIFIED_WOUT_LPV",
											"type": "DatasetReference",
											"parameters": {
												"DS_SOURCE_FOLDER_NAME_PARAM": {
													"value": "@pipeline().parameters.PL_CHILD_FOLDER_NAME_PARAM",
													"type": "Expression"
												},
												"DS_SOURCE_FILE_NAME_PARAM": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "LIST ALL LAST MODIFIED VALUES FOR FILES",
									"type": "AppendVariable",
									"dependsOn": [
										{
											"activity": "GET METADATA - LAST MODIFIED",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "LADates",
										"value": {
											"value": "@activity('GET METADATA - LAST MODIFIED').output.lastModified",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "GET LATEST DATE",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "FOREACH LOOP - LOOP THROUGH FILES",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LatestDate",
							"value": {
								"value": "@last(variables('LADates'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "COPY DATA - INCREMENTAL FILE COPY",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GET LATEST DATE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@variables('LatestDate')",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_GEN2_INPUT_GET_FILES_WOUT_LPV",
								"type": "DatasetReference",
								"parameters": {
									"DS_GETFOLDER_FOR_FILES_PARAM": {
										"value": "@pipeline().parameters.PL_CHILD_FOLDER_NAME_PARAM",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_GEN2_SINK_FOLDER_FILE_WOUT_LPV",
								"type": "DatasetReference",
								"parameters": {
									"DS_SINK_FOLDER_WOUTLPV_PARAM": {
										"value": "@pipeline().parameters.PL_CHILD_FOLDER_NAME_PARAM",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"PL_CHILD_FOLDER_NAME_PARAM": {
						"type": "string"
					}
				},
				"variables": {
					"LatestDate": {
						"type": "String"
					},
					"LADates": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-22T12:10:37Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_40_CHILD_NESTED_FOREACH_ALTERNATED_SOLUTION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GET META DATA LOOP THROUGH FOLDER FILES",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_AZGEN2_INPUT_GETFILES_INPUT_NESTED_FOREACH",
								"type": "DatasetReference",
								"parameters": {
									"DS_FOLDER_NAME_PARAM_NESTED_FOREACH": {
										"value": "@pipeline().parameters.PL_CHILD_PIPELINE_FOLDER_PARAM",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "FOREACH - LOOP THROUGH FILES",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GET META DATA LOOP THROUGH FOLDER FILES",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET META DATA LOOP THROUGH FOLDER FILES').output.childitems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "COPY DATA - AZ GEN2 INPUT TO OUTPUT GEN2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFileName": "*",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_AZGEN2_INPUT_GETFILES_INPUT_NESTED_FOREACH",
											"type": "DatasetReference",
											"parameters": {
												"DS_FOLDER_NAME_PARAM_NESTED_FOREACH": {
													"value": "@pipeline().parameters.PL_CHILD_PIPELINE_FOLDER_PARAM",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_SINK_GEN2_NESTED_FOREACH_FOLDER_FILES",
											"type": "DatasetReference",
											"parameters": {
												"DS_FOLDER_SINK_NESTED_FOREACH_PARAM": {
													"value": "@pipeline().parameters.PL_CHILD_PIPELINE_FOLDER_PARAM",
													"type": "Expression"
												},
												"DS_FILES_SINK_NESTED_FOREACH_PARAM": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"PL_CHILD_PIPELINE_FOLDER_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-22T11:11:11Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZBLOB_CONTAINER_OUTUT_LAST_MODIFIED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB_KV",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_SINK_CONTAINER_PARM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().DS_SINK_CONTAINER_PARM",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZBLOB_SINK_KV_OUTPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB_KV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "keyvaultoutput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		}
	]
}