{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADFLEARNING2021RAVI"
		},
		"LS_AWS_S3_secretAccessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'secretAccessKey' of 'LS_AWS_S3'"
		},
		"LS_AZBLOB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_AZBLOB'"
		},
		"LS_AZBLOB_GEN2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_AZBLOB_GEN2'"
		},
		"LS_AZBLOB_GEN2_SERVICE_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_AZBLOB_GEN2_SERVICE'"
		},
		"LS_AZGEN2_DATAFACTORY_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_AZGEN2_DATAFACTORY'"
		},
		"LS_AZSQLDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_AZSQLDB'"
		},
		"LS_AZSQLDB_DESTINATION_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_AZSQLDB_DESTINATION'"
		},
		"LS_AZUREDATABRICKS_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'LS_AZUREDATABRICKS'"
		},
		"LS_AZVM_SQL_ON_PREMISE_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_AZVM_SQL_ON_PREMISE'"
		},
		"LS_AzureSynapseAnalytics_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_AzureSynapseAnalytics'"
		},
		"LS_COSMOS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_COSMOS'"
		},
		"LS_FILESYSTEM_AZVM_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_FILESYSTEM_AZVM'"
		},
		"LS_SALESFORCE_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_SALESFORCE'"
		},
		"LS_SALESFORCE_securityToken": {
			"type": "secureString",
			"metadata": "Secure string for 'securityToken' of 'LS_SALESFORCE'"
		},
		"LS_SQLSERVER_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SQLSERVER'"
		},
		"LS_AWS_S3_properties_typeProperties_accessKeyId": {
			"type": "string",
			"defaultValue": "AKIARO4WCVQIRS4OEE75"
		},
		"LS_AZBLOB_GEN2_SERVICE_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storagegen2fordatabricks.dfs.core.windows.net"
		},
		"LS_AZBLOB_KV_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "AZBLOBKVCONNECTION"
		},
		"LS_AZBLOB_SAS_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'LS_AZBLOB_SAS'"
		},
		"LS_AZGEN2_DATAFACTORY_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azuredatalakegen2adf.dfs.core.windows.net"
		},
		"LS_AZSQLDB_KV_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "AZSQLDBKV"
		},
		"LS_FILESYSTEM_AZVM_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\DataFolder\\"
		},
		"LS_FILESYSTEM_AZVM_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "adminuser"
		},
		"LS_KeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://AZ-KV-20210610.vault.azure.net/"
		},
		"LS_RESTAPI_JSON_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().LS_SourceURL_Param}"
		},
		"LS_SALESFORCE_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://login.salesforce.com"
		},
		"LS_SALESFORCE_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "rtutika93@gmail.com"
		},
		"LS_SNOWFLAKE_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SNOWFLAKE'"
		},
		"TR_EVENT_TRIGGER_properties_PL_LAB_23_EVENT_TRIGGER_COPY_DATA_BLOB_TO_SQL_parameters_PL_SOURCE_FOLDER_PARAM": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"TR_EVENT_TRIGGER_properties_PL_LAB_23_EVENT_TRIGGER_COPY_DATA_BLOB_TO_SQL_parameters_PL_FILENAME_PARAM": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"TR_EVENT_TRIGGER_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/589236d2-94ee-4a96-957e-6be80868fac7/resourceGroups/RG-AZUREDATA_FACTORY_MASTER_PROGRAM/providers/Microsoft.Storage/storageAccounts/storageaccount07062021"
		},
		"TR_TUMB_properties_pipeline_parameters_PL_WindowStartTime": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		},
		"TR_TUMB_properties_pipeline_parameters_PL_WindowEndTime": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		},
		"TR_TUMB_properties_pipeline_parameters_PL_TriggerTime": {
			"type": "string",
			"defaultValue": "@trigger().startTime"
		},
		"TR_TUMBLING_WINDOW_properties_pipeline_parameters_PL_WindowStartTime": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		},
		"TR_TUMBLING_WINDOW_properties_pipeline_parameters_PL_WindowEndTime": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		},
		"TR_TUMBLING_WINDOW_properties_pipeline_parameters_PL_TriggerTime": {
			"type": "string",
			"defaultValue": "@trigger().startTime"
		},
		"LiftShiftSSISPackagesRunTime_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint": {
			"type": "string",
			"defaultValue": "az-sqlserver-001-learning.database.windows.net"
		},
		"LiftShiftSSISPackagesRunTime_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName": {
			"type": "string",
			"defaultValue": "adminuser"
		},
		"LiftShiftSSISPackagesRunTime_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword": {
			"type": "secureString"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_01_BLOB_BLOB_COPY_DATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA BLOB TO BLOB - ONE FILE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "input//BachelorsAndGraduationDegreeData.csv"
							},
							{
								"name": "Destination",
								"value": "output//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZBLOB_BLOB_INPUT_DATASET",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZBLOB_BLOB_OUTPUT_DATASET",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-07T11:32:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_BLOB_INPUT_DATASET')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_BLOB_OUTPUT_DATASET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_02_CASE_01_BLOB_BLOB_ALL_FILES_COPY_DATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - BLOB TO BLOB ALL FILES",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "input//"
							},
							{
								"name": "Destination",
								"value": "output//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZBLOB_BLOB_ALL_FILES_INPUT_DATASET",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZBLOB_BLOB_ALL_FILES_OUTPUT_DATASET",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-07T10:40:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_BLOB_ALL_FILES_INPUT_DATASET')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_BLOB_ALL_FILES_OUTPUT_DATASET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_02_CASE_02_BLOB_BLOB_ALL_CSV_FILES_COPY_DATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - BLOB TO BLOB ALL FILES",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "input//"
							},
							{
								"name": "Destination",
								"value": "output//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZBLOB_BLOB_ALL_FILES_INPUT_DATASET",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZBLOB_BLOB_ALLCSV_FILE_OUTPUT_DATASET",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-07T10:51:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_BLOB_ALL_FILES_INPUT_DATASET')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_BLOB_ALLCSV_FILE_OUTPUT_DATASET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_03_BLOB_BLOB_COPYDATA_PARAMETERS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - BLOB TO BLOB PARAMETERIZE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BLOB_BLOB_INPUT_PARAMETER",
								"type": "DatasetReference",
								"parameters": {
									"DS_INPUT_PARAM_CONTAINER": {
										"value": "@pipeline().parameters.PL_INPUT_PARAMETER_CONTAINER",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BLOB_BLOB_OUTPUT_PARAMETER",
								"type": "DatasetReference",
								"parameters": {
									"DS_OUTPUT_PARAM_CONTAINER": {
										"value": "@pipeline().parameters.PL_OUTPUT_PARAMETER_CONTAINER",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"PL_INPUT_PARAMETER_CONTAINER": {
						"type": "string"
					},
					"PL_OUTPUT_PARAMETER_CONTAINER": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-07T11:11:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_BLOB_INPUT_PARAMETER')]",
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_BLOB_OUTPUT_PARAMETER')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_04_COPY_FILES_CSV_JSON_TO_RESPECTIVE_CONTAINER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GET METADATA - CSV JSON FILES CHILD ITEMS",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_GETMETADATA_CSV_JSON_FILES",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "FILTER CSV FILES",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GET METADATA - CSV JSON FILES CHILD ITEMS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET METADATA - CSV JSON FILES CHILD ITEMS').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endswith(item().name,'.csv')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FILTER JSON FILES",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GET METADATA - CSV JSON FILES CHILD ITEMS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET METADATA - CSV JSON FILES CHILD ITEMS').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endswith(item().name,'.json')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FOR EACH LOOP THROUGH CSV FILES",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FILTER CSV FILES",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FILTER CSV FILES').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "COPY DATA - CSV FILES",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_AZBLOB_BLOB_INPUT_PARAM_CSV_JSON",
											"type": "DatasetReference",
											"parameters": {
												"DS_SOURCE_FILE_NAME_PARAM": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AZBLOB_BLOB_OUTPUT_PARAM_CSV",
											"type": "DatasetReference",
											"parameters": {
												"DS_OUTPUT_PARAM_CSV_JSON": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "FOR EACH LOOP THROUGH JSON FILES",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FILTER JSON FILES",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FILTER JSON FILES').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "COPY DATA - JSON FILES",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_AZBLOB_BLOB_INPUT_PARAM_CSV_JSON",
											"type": "DatasetReference",
											"parameters": {
												"DS_SOURCE_FILE_NAME_PARAM": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AZBLOB_BLOB_OUTPUT_PARAM_JSON_PARAM",
											"type": "DatasetReference",
											"parameters": {
												"DS_SINK_FILE_NAME_PARAM": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-07T12:43:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_GETMETADATA_CSV_JSON_FILES')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_BLOB_INPUT_PARAM_CSV_JSON')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_BLOB_OUTPUT_PARAM_CSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_BLOB_OUTPUT_PARAM_JSON_PARAM')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_05_COPY_FILES_CSV_JSON_TO_RESPECTIVE_CONTAINER_DATETIME')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GET METADATA - CSV JSON FILES CHILD ITEMS",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_GETMETADATA_CSV_JSON_FILES",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "FILTER CSV FILES",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GET METADATA - CSV JSON FILES CHILD ITEMS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET METADATA - CSV JSON FILES CHILD ITEMS').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endswith(item().name,'.csv')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FILTER JSON FILES",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GET METADATA - CSV JSON FILES CHILD ITEMS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET METADATA - CSV JSON FILES CHILD ITEMS').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endswith(item().name,'.json')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FOR EACH LOOP THROUGH CSV FILES",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FILTER CSV FILES",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FILTER CSV FILES').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "COPY DATA - CSV FILES",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_AZBLOB_BLOB_INPUT_PARAM_CSV_JSON",
											"type": "DatasetReference",
											"parameters": {
												"DS_SOURCE_FILE_NAME_PARAM": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AZBLOB_BLOB_OUTPUT_PARAM_CSV",
											"type": "DatasetReference",
											"parameters": {
												"DS_OUTPUT_PARAM_CSV_JSON": {
													"value": "@concat(replace(item().name,'.csv',''),formatDateTime(convertTimeZone(utcnow(),'UTC','Eastern Standard Time'),'yyyy-MM-ddTHHmmss'),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "FOR EACH LOOP THROUGH JSON FILES",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FILTER JSON FILES",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FILTER JSON FILES').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "COPY DATA - JSON FILES",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_AZBLOB_BLOB_INPUT_PARAM_CSV_JSON",
											"type": "DatasetReference",
											"parameters": {
												"DS_SOURCE_FILE_NAME_PARAM": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AZBLOB_BLOB_OUTPUT_PARAM_JSON_PARAM",
											"type": "DatasetReference",
											"parameters": {
												"DS_SINK_FILE_NAME_PARAM": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-07T13:15:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_GETMETADATA_CSV_JSON_FILES')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_BLOB_INPUT_PARAM_CSV_JSON')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_BLOB_OUTPUT_PARAM_CSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_BLOB_OUTPUT_PARAM_JSON_PARAM')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_06_COPY_DATA_BY_CONVERTING_CSV_JSON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - CONVERT CSV FILES TO JSON",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_AZBLOB_BLOB_INPUT_CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZBLOB_BLOB_OUTPUT_JSON",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-07T14:00:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_BLOB_INPUT_CSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_BLOB_OUTPUT_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_07_COPY_DATA_FROM_CONTAINER_TO_CONTAINER_PARAM_METADATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LOOKUP - GET CONTAINER DETAILS",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DS_AZBLOB_CONTAINER_METDATA_EXTRACT_INPUT_OUTPUT",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOREACH - LOOP THROUGH CONTAINER DATA",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LOOKUP - GET CONTAINER DETAILS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LOOKUP - GET CONTAINER DETAILS').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "COPY DATA FROM ONE CONTAINER TO ANOTHER CONTAINER",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": "*",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_CONTAINER_METADATA_INPUT",
											"type": "DatasetReference",
											"parameters": {
												"DS_SOURCE_CONTAINER_PARAM": {
													"value": "@item().SourceFolder",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_CONTAINER_METADATA_OUTPUT",
											"type": "DatasetReference",
											"parameters": {
												"DS_OUTPUT_CONTAINER_PARAM": {
													"value": "@item().TargetFolder",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-07T14:31:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_CONTAINER_METDATA_EXTRACT_INPUT_OUTPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_CONTAINER_METADATA_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_CONTAINER_METADATA_OUTPUT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_08_CASE_01_COPY_BEHAVIOUR_PROPERTY_RECURSIVE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - COPY BEHAVIOUR WITH RECURSIVE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_CSV_GEN2_COPY_BEHAVIOUR_INPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CSV_GEN2_COPY_BEHAVIOUR_OUTPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-10T12:16:29Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CSV_GEN2_COPY_BEHAVIOUR_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_CSV_GEN2_COPY_BEHAVIOUR_OUTPUT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_08_CASE_02_COPY_BEHAVIOUR_PROPERTY_NON_RECURSIVE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - COPY BEHAVIOUR WITH RECURSIVE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_CSV_GEN2_COPY_BEHAVIOUR_INPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CSV_GEN2_COPY_BEHAVIOUR_OUTPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-10T12:50:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CSV_GEN2_COPY_BEHAVIOUR_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_CSV_GEN2_COPY_BEHAVIOUR_OUTPUT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_09_MULTIPLE_FILE_COPY_FROM_DIFFERENT_CONTAINERS_IF_EXISTS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LOOKUP - CONTAINER METADATA CHECKING",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DS_AZBLOB_CONTAINER_METADATA_DETAILS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOREACH  - LOOP THROUGH LOOKUP CONTAINER DATA",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LOOKUP - CONTAINER METADATA CHECKING",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LOOKUP - CONTAINER METADATA CHECKING').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GET METADATA - CHILD ITEMS",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_SOURCE_CONTAINER_FILE_COPY",
											"type": "DatasetReference",
											"parameters": {
												"DS_SOURCE_CONTAINER_PARAM": {
													"value": "@item().SourceFolder",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "IF CONDITION - FOR CHILD ITEMS PRESENECE",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GET METADATA - CHILD ITEMS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@not(equals(length(activity('GET METADATA - CHILD ITEMS').output.childitems),0))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "COPY DATA - CONTAINER FILES",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFileName": "*",
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".csv"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_SOURCE_CONTAINER_FILE_COPY",
														"type": "DatasetReference",
														"parameters": {
															"DS_SOURCE_CONTAINER_PARAM": {
																"value": "@item().SourceFolder",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_SINK_CONTAINER_FILE_COPY",
														"type": "DatasetReference",
														"parameters": {
															"DS_SINK_CONTAINER_PARAM": {
																"value": "@item().TargetFolder",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-10T14:34:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_CONTAINER_METADATA_DETAILS')]",
				"[concat(variables('factoryId'), '/datasets/DS_SOURCE_CONTAINER_FILE_COPY')]",
				"[concat(variables('factoryId'), '/datasets/DS_SINK_CONTAINER_FILE_COPY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_10_CASE_01_COPY_DATA_FROM_BLOB_BLOB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - BLOB TO BLOB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZBLOB_DEGREEDATA_INPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZBLOB_DEGREEDATA_OUTPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-12T06:46:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_DEGREEDATA_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_DEGREEDATA_OUTPUT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_10_CASE_02_COPY_DATA_FROM_BLOB_BLOB_ADDING_NEW_COLUMNS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - BLOB TO BLOB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "FilePath",
										"value": "$$FILEPATH"
									},
									{
										"name": "PipeLineName",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									{
										"name": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TotalChildren",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalChildren",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "YearlyIncome",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "YearlyIncome",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EnglishEducation",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EnglishEducation",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FilePath",
											"type": "String"
										},
										"sink": {
											"name": "FilePath",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PipeLineName",
											"type": "String"
										},
										"sink": {
											"name": "PipeLineName",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DateTime",
											"type": "String"
										},
										"sink": {
											"name": "DateTime",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZBLOB_DEGREEDATA_INPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZBLOB_DEGREEDATA_OUTPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-12T06:46:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_DEGREEDATA_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_DEGREEDATA_OUTPUT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_10_CASE_03_COPY_DATA_FROM_BLOB_BLOB_REMOVING_COLUMNS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - BLOB TO BLOB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "FilePath",
										"value": "$$FILEPATH"
									},
									{
										"name": "PipeLineName",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									{
										"name": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TotalChildren",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalChildren",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "YearlyIncome",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "YearlyIncome",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FilePath",
											"type": "String"
										},
										"sink": {
											"name": "FilePath",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PipeLineName",
											"type": "String"
										},
										"sink": {
											"name": "PipeLineName",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DateTime",
											"type": "String"
										},
										"sink": {
											"name": "DateTime",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZBLOB_DEGREEDATA_INPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZBLOB_DEGREEDATA_OUTPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-12T06:50:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_DEGREEDATA_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_DEGREEDATA_OUTPUT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_10_CASE_04_COPY_DATA_FROM_BLOB_BLOB_VALIDATION_SOURCE_FILES_REMOVAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - BLOB TO BLOB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "FilePath",
										"value": "$$FILEPATH"
									},
									{
										"name": "PipeLineName",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									{
										"name": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TotalChildren",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalChildren",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "YearlyIncome",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "YearlyIncome",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FilePath",
											"type": "String"
										},
										"sink": {
											"name": "FilePath",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PipeLineName",
											"type": "String"
										},
										"sink": {
											"name": "PipeLineName",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DateTime",
											"type": "String"
										},
										"sink": {
											"name": "DateTime",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZBLOB_DEGREEDATA_INPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZBLOB_DEGREEDATA_OUTPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "IF CONDITION - CHECK EQUALITY OF FILES READ AND WRITTEN",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "COPY DATA - BLOB TO BLOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('COPY DATA - BLOB TO BLOB').output.filesRead,activity('COPY DATA - BLOB TO BLOB').output.filesWritten)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "DELETE - SOURCE FILES",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_AZBLOB_DEGREEDATA_INPUT",
											"type": "DatasetReference",
											"parameters": {}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_AZBLOB",
												"type": "LinkedServiceReference"
											},
											"path": ""
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "*",
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-12T06:04:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_DEGREEDATA_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_DEGREEDATA_OUTPUT')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_11_COPY_AZSQL_TABLE_STORAGE_CONTAINER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - AZSQL TO STORAGE ACCOUNT",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZSQLDB_SALESORDER_DETAILS_INPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZSQLSTORAGE_OUTPUT_FROM_SQLDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-12T07:55:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLDB_SALESORDER_DETAILS_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLSTORAGE_OUTPUT_FROM_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_12_CASE_01_COPY_AZSQL_TABLE_STORAGE_CONTAINER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - AZSQL TO STORAGE ACCOUNT",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZSQLDB_SALESORDER_DETAILS_INPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZSQLSTORAGE_OUTPUT_FROM_SQLDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-12T09:16:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLDB_SALESORDER_DETAILS_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLSTORAGE_OUTPUT_FROM_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_12_CASE_02_COPY_AZSQL_TABLE_STORAGE_CONTAINER_SELECTED_COLUMNS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - AZSQL TO STORAGE ACCOUNT",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT ProductID,UnitPrice,OrderQty FROM [SalesLT].[SalesOrderDetail]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZSQLDB_SALESORDER_DETAILS_INPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZSQLSTORAGE_OUTPUT_FROM_SQLDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-12T09:21:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLDB_SALESORDER_DETAILS_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLSTORAGE_OUTPUT_FROM_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_12_CASE_03_COPY_AZSQL_TABLE_STORAGE_CONTAINER_SUBSETDATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - AZSQL TO STORAGE ACCOUNT",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT ProductID,UnitPrice,OrderQty FROM [SalesLT].[SalesOrderDetail]\nWHERE UnitPrice BETWEEN 300 AND 500",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZSQLDB_SALESORDER_DETAILS_INPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZSQLSTORAGE_OUTPUT_FROM_SQLDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-12T17:42:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLDB_SALESORDER_DETAILS_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLSTORAGE_OUTPUT_FROM_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_12_CASE_04_COPY_AZSQL_TABLE_STORAGE_CONTAINER_STORED_PROCEDURE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - AZSQL TO STORAGE ACCOUNT",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[USP_GetSalesOrderDetails]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZSQLDB_SALESORDER_DETAILS_INPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZSQLSTORAGE_OUTPUT_FROM_SQLDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-12T17:42:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLDB_SALESORDER_DETAILS_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLSTORAGE_OUTPUT_FROM_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_12_CASE_05_COPY_AZSQL_TABLE_STORAGE_CONTAINER_STORED_PROCEDURE_APPEND_MODE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - AZSQL TO STORAGE ACCOUNT",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[USP_GetSalesOrderDetails]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZSQLDB_SALESORDER_DETAILS_INPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZSQLSTORAGE_OUTPUT_FROM_SQLDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-12T17:42:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLDB_SALESORDER_DETAILS_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLSTORAGE_OUTPUT_FROM_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_12_CASE_06_COPY_AZSQL_TABLE_STORAGE_CONTAINER_STORED_PROCEDURE_OVVER_WRITE_MODE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - AZSQL TO STORAGE ACCOUNT",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DELETE EXISTING FILES",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[USP_GetSalesOrderDetails]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZSQLDB_SALESORDER_DETAILS_INPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZSQLSTORAGE_OUTPUT_FROM_SQLDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DELETE EXISTING FILES",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_AZSQLSTORAGE_OUTPUT_FROM_SQLDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-12T17:42:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLDB_SALESORDER_DETAILS_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLSTORAGE_OUTPUT_FROM_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_13_COPY_AZ_SQLDB_SQLDB_PARAMETERS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - AZ SQL TO AZ SQL PARAM",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZSQLDB_INPUT_PARAM",
								"type": "DatasetReference",
								"parameters": {
									"DS_SOURCE_SCHEMA_NAME": {
										"value": "@pipeline().parameters.PL_SOURCE_SCHEMA_PARAM",
										"type": "Expression"
									},
									"DS_SOURCE_TABLE_NAME": {
										"value": "@pipeline().parameters.PL_SOURCE_TABLE_PARAM",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZSQL_DB_DESTINATION",
								"type": "DatasetReference",
								"parameters": {
									"DS_SINK_SCHEMA_NAME": {
										"value": "@pipeline().parameters.PL_SINK_SCHEMA_PARAM",
										"type": "Expression"
									},
									"DS_SINK_TABLE_NAME": {
										"value": "@pipeline().parameters.PL_SINK_TABLE_PARAM",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"PL_SOURCE_SCHEMA_PARAM": {
						"type": "string"
					},
					"PL_SOURCE_TABLE_PARAM": {
						"type": "string"
					},
					"PL_SINK_SCHEMA_PARAM": {
						"type": "string"
					},
					"PL_SINK_TABLE_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-12T17:42:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLDB_INPUT_PARAM')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_DB_DESTINATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_14_CASE_01_COPY_AZ_SQLDB_SQLDB_PARAMETERS_APPEND_MODE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - AZ SQL TO AZ SQL PARAM",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZSQLDB_INPUT_PARAM",
								"type": "DatasetReference",
								"parameters": {
									"DS_SOURCE_SCHEMA_NAME": {
										"value": "@pipeline().parameters.PL_SOURCE_SCHEMA_PARAM",
										"type": "Expression"
									},
									"DS_SOURCE_TABLE_NAME": {
										"value": "@pipeline().parameters.PL_SOURCE_TABLE_PARAM",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZSQL_DB_DESTINATION",
								"type": "DatasetReference",
								"parameters": {
									"DS_SINK_SCHEMA_NAME": {
										"value": "@pipeline().parameters.PL_SINK_SCHEMA_PARAM",
										"type": "Expression"
									},
									"DS_SINK_TABLE_NAME": {
										"value": "@pipeline().parameters.PL_SINK_TABLE_PARAM",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"PL_SOURCE_SCHEMA_PARAM": {
						"type": "string"
					},
					"PL_SOURCE_TABLE_PARAM": {
						"type": "string"
					},
					"PL_SINK_SCHEMA_PARAM": {
						"type": "string"
					},
					"PL_SINK_TABLE_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-12T17:42:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLDB_INPUT_PARAM')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_DB_DESTINATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_14_CASE_02_COPY_AZ_SQLDB_SQLDB_PARAMETERS_OVERWRITE_MODE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - AZ SQL TO AZ SQL PARAM",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "@{concat('TRUNCATE ','TABLE ' ,pipeline().parameters.PL_SINK_SCHEMA_PARAM,'.',pipeline().parameters.PL_SINK_TABLE_PARAM)}",
									"type": "Expression"
								},
								"writeBehavior": "insert",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZSQLDB_INPUT_PARAM",
								"type": "DatasetReference",
								"parameters": {
									"DS_SOURCE_SCHEMA_NAME": {
										"value": "@pipeline().parameters.PL_SOURCE_SCHEMA_PARAM",
										"type": "Expression"
									},
									"DS_SOURCE_TABLE_NAME": {
										"value": "@pipeline().parameters.PL_SOURCE_TABLE_PARAM",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZSQL_DB_DESTINATION",
								"type": "DatasetReference",
								"parameters": {
									"DS_SINK_SCHEMA_NAME": {
										"value": "@pipeline().parameters.PL_SINK_SCHEMA_PARAM",
										"type": "Expression"
									},
									"DS_SINK_TABLE_NAME": {
										"value": "@pipeline().parameters.PL_SINK_TABLE_PARAM",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"PL_SOURCE_SCHEMA_PARAM": {
						"type": "string"
					},
					"PL_SOURCE_TABLE_PARAM": {
						"type": "string"
					},
					"PL_SINK_SCHEMA_PARAM": {
						"type": "string"
					},
					"PL_SINK_TABLE_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-12T17:42:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLDB_INPUT_PARAM')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_DB_DESTINATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_15_BULK_TABLE_LOAD_TO_STORAGE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LOOKUP - AZSQLBULK LOAD",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AZSQL_BULLOAD_TABLE_METADATA_STORAGE",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOR EACH - LOOP THROUGH META DATA",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LOOKUP - AZSQLBULK LOAD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LOOKUP - AZSQLBULK LOAD').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GET META DATA - TABLE EXISTENCE",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_AZSQL_SCHEMA_TABLE_INPUT",
											"type": "DatasetReference",
											"parameters": {
												"DS_SCHEMA_NAME_PARAM": {
													"value": "@item().SchemaName",
													"type": "Expression"
												},
												"DS_TABLE_NAME_PARAM": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists"
										]
									}
								},
								{
									"name": "IF CONDITION - CHECK FOR TABLE EXISTENCE",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GET META DATA - TABLE EXISTENCE",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('GET META DATA - TABLE EXISTENCE').output.Exists",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "WAIT ACTIVTY IF TABLE NOT EXISTS",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 2
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "COPY DATA FROM AZURE SQL TO AZURE STORAG",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_AZSQL_SCHEMA_TABLE_INPUT",
														"type": "DatasetReference",
														"parameters": {
															"DS_SCHEMA_NAME_PARAM": {
																"value": "@item().SchemaName",
																"type": "Expression"
															},
															"DS_TABLE_NAME_PARAM": {
																"value": "@item().TableName",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_BULKBLOBSTORAGE_FROM_SQL_OUTPUT",
														"type": "DatasetReference",
														"parameters": {
															"DS_CONTAINER_NAME_PARAM": {
																"value": "@item().SinkContaineName",
																"type": "Expression"
															},
															"DS_FILE_NAME_PARAM": {
																"value": "@item().SinkFileName",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-12T17:42:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_BULLOAD_TABLE_METADATA_STORAGE')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_SCHEMA_TABLE_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_BULKBLOBSTORAGE_FROM_SQL_OUTPUT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_16_CASE_01_BULK_TABLE_LOAD_TO_STORAGE_AUDIT_LOGS_SUCCESS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LOOKUP - AZSQLBULK LOAD",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AZSQL_BULLOAD_TABLE_METADATA_STORAGE",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOR EACH - LOOP THROUGH META DATA",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LOOKUP - AZSQLBULK LOAD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LOOKUP - AZSQLBULK LOAD').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GET META DATA - TABLE EXISTENCE",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_AZSQL_SCHEMA_TABLE_INPUT",
											"type": "DatasetReference",
											"parameters": {
												"DS_SCHEMA_NAME_PARAM": {
													"value": "@item().SchemaName",
													"type": "Expression"
												},
												"DS_TABLE_NAME_PARAM": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists"
										]
									}
								},
								{
									"name": "IF CONDITION - CHECK FOR TABLE EXISTENCE",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GET META DATA - TABLE EXISTENCE",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('GET META DATA - TABLE EXISTENCE').output.Exists",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "WAIT ACTIVTY IF TABLE NOT EXISTS",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 2
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "COPY DATA FROM AZURE SQL TO AZURE STORAG",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_AZSQL_SCHEMA_TABLE_INPUT",
														"type": "DatasetReference",
														"parameters": {
															"DS_SCHEMA_NAME_PARAM": {
																"value": "@item().SchemaName",
																"type": "Expression"
															},
															"DS_TABLE_NAME_PARAM": {
																"value": "@item().TableName",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_BULKBLOBSTORAGE_FROM_SQL_OUTPUT",
														"type": "DatasetReference",
														"parameters": {
															"DS_CONTAINER_NAME_PARAM": {
																"value": "@item().SinkContaineName",
																"type": "Expression"
															},
															"DS_FILE_NAME_PARAM": {
																"value": "@item().SinkFileName",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "STORED PROCEDURE - SUCCESS",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "COPY DATA FROM AZURE SQL TO AZURE STORAG",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_auditlogs_BulkTableLoad]",
													"storedProcedureParameters": {
														"CopyDuration": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').output.copyDuration",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"DataFactoryName": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"EndTime": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').ExecutionEndTime",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"LoadStaus": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').Status",
																"type": "Expression"
															},
															"type": "String"
														},
														"Notification": {
															"value": {
																"value": "@concat(pipeline().Pipeline,' Executed Successfully')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineID": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"RowsRead": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').output.rowsCopied",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"RowsWritten": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').output.rowsRead",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"StartTime": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').ExecutionStartTime",
																"type": "Expression"
															},
															"type": "DateTime"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_AZSQLDB",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "STORED PROCEDURE - FAILURE",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "COPY DATA FROM AZURE SQL TO AZURE STORAG",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_auditlogs_BulkTableLoad]",
													"storedProcedureParameters": {
														"CopyDuration": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').output.copyDuration",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"DataFactoryName": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"EndTime": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').ExecutionEndTime",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"LoadStaus": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').Status",
																"type": "Expression"
															},
															"type": "String"
														},
														"Notification": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').Error",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineID": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"RowsRead": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').output.rowsCopied",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"RowsWritten": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').output.rowsRead",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"StartTime": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').ExecutionStartTime",
																"type": "Expression"
															},
															"type": "DateTime"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_AZSQLDB",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-12T17:42:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_BULLOAD_TABLE_METADATA_STORAGE')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_SCHEMA_TABLE_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_BULKBLOBSTORAGE_FROM_SQL_OUTPUT')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_16_CASE_02_BULK_TABLE_LOAD_TO_STORAGE_AUDIT_LOGS_FAILURE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LOOKUP - AZSQLBULK LOAD",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AZSQL_BULLOAD_TABLE_METADATA_STORAGE",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOR EACH - LOOP THROUGH META DATA",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LOOKUP - AZSQLBULK LOAD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LOOKUP - AZSQLBULK LOAD').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GET META DATA - TABLE EXISTENCE",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_AZSQL_SCHEMA_TABLE_INPUT",
											"type": "DatasetReference",
											"parameters": {
												"DS_SCHEMA_NAME_PARAM": {
													"value": "@item().SchemaName",
													"type": "Expression"
												},
												"DS_TABLE_NAME_PARAM": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists"
										]
									}
								},
								{
									"name": "IF CONDITION - CHECK FOR TABLE EXISTENCE",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GET META DATA - TABLE EXISTENCE",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('GET META DATA - TABLE EXISTENCE').output.Exists",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "WAIT ACTIVTY IF TABLE NOT EXISTS",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 2
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "COPY DATA FROM AZURE SQL TO AZURE STORAG",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_AZSQL_SCHEMA_TABLE_INPUT",
														"type": "DatasetReference",
														"parameters": {
															"DS_SCHEMA_NAME_PARAM": {
																"value": "@item().SchemaName",
																"type": "Expression"
															},
															"DS_TABLE_NAME_PARAM": {
																"value": "@item().TableName",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_BULKBLOBSTORAGE_FROM_SQL_OUTPUT",
														"type": "DatasetReference",
														"parameters": {
															"DS_CONTAINER_NAME_PARAM": {
																"value": "@item().SinkContaineName1",
																"type": "Expression"
															},
															"DS_FILE_NAME_PARAM": {
																"value": "@item().SinkFileName",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "STORED PROCEDURE - SUCCESS",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "COPY DATA FROM AZURE SQL TO AZURE STORAG",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_auditlogs_BulkTableLoad]",
													"storedProcedureParameters": {
														"CopyDuration": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').output.copyDuration",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"DataFactoryName": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"EndTime": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').ExecutionEndTime",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"LoadStaus": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').Status",
																"type": "Expression"
															},
															"type": "String"
														},
														"Notification": {
															"value": {
																"value": "@concat(pipeline().Pipeline,' Executed Successfully')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineID": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"RowsRead": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').output.rowsCopied",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"RowsWritten": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').output.rowsRead",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"StartTime": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').ExecutionStartTime",
																"type": "Expression"
															},
															"type": "DateTime"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_AZSQLDB",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "STORED PROCEDURE - FAILURE",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "COPY DATA FROM AZURE SQL TO AZURE STORAG",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_auditlogs_BulkTableLoad]",
													"storedProcedureParameters": {
														"CopyDuration": {
															"value": null,
															"type": "Int32"
														},
														"DataFactoryName": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"EndTime": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').ExecutionEndTime",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"LoadStaus": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').Status",
																"type": "Expression"
															},
															"type": "String"
														},
														"Notification": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').Error",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineID": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"RowsRead": {
															"value": null,
															"type": "Int32"
														},
														"RowsWritten": {
															"value": null,
															"type": "Int32"
														},
														"StartTime": {
															"value": {
																"value": "@activity('COPY DATA FROM AZURE SQL TO AZURE STORAG').ExecutionStartTime",
																"type": "Expression"
															},
															"type": "DateTime"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_AZSQLDB",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-12T17:42:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_BULLOAD_TABLE_METADATA_STORAGE')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_SCHEMA_TABLE_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_BULKBLOBSTORAGE_FROM_SQL_OUTPUT')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_17_COPY_DATA_AZSQLTABLE_STORAGE_KV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - AZSQL TO BLOB KV",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZSQLDB_KV_INPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZBLOB_SINK_KV_OUTPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-13T16:08:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLDB_KV_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_SINK_KV_OUTPUT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_18_ONE_TABLE_INCREMENTAL_LOAD_SQL_TO_BLOB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LOOKUP - GET OLD WATER MARK VALUE",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AZSQL_INCREMENTAL_WATERMARK_COLUMN_SINGLE",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "LOOK UP - NEW WATER MARK VALUE",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT MAX(LastModifyTime) AS [NewWaterMarkValue] FROM EmployeeTable",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AZSQL_INCREMENTAL_WATERMARK_COLUMN_SINGLE",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "COPY DATA - INCREMENTAL LOAD",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LOOKUP - GET OLD WATER MARK VALUE",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LOOK UP - NEW WATER MARK VALUE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM EmployeeTable\nWHERE LastModifyTime >'@{activity('LOOKUP - GET OLD WATER MARK VALUE').output.firstRow.LastModifyTime}'\nAND LastModifyTime <='@{activity('LOOK UP - NEW WATER MARK VALUE').output.firstRow.NewWaterMarkValue}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZSQL_INCREMENTAL_WATERMARK_COLUMN_SINGLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SINGLE_TABLE_INCREMENTAL_OUTPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SP_FOR_UPDATE_WATERMARK_TABLE",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "COPY DATA - INCREMENTAL LOAD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[USP_UpdateWaterMarkTable]",
							"storedProcedureParameters": {
								"LastModifiedTime": {
									"value": {
										"value": "@activity('LOOK UP - NEW WATER MARK VALUE').output.firstRow.NewWaterMarkValue",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": {
										"value": "@activity('LOOKUP - GET OLD WATER MARK VALUE').output.firstRow.TableName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AZSQLDB_KV",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-14T15:48:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_INCREMENTAL_WATERMARK_COLUMN_SINGLE')]",
				"[concat(variables('factoryId'), '/datasets/DS_SINGLE_TABLE_INCREMENTAL_OUTPUT')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_19_INCREMENTAL_LOAD_MUL_TABLE_SQL_TO_BLOB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LOOKUP - WATER MARK CONFIG TABLE",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AZSQL_WATERMARK_CONFIG_MULTILOAD",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOR EACH - LOOP THROUGH CONFIG TABLE",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LOOKUP - WATER MARK CONFIG TABLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LOOKUP - WATER MARK CONFIG TABLE').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "LOOKUP - GETOLD WATER MARK VALUE",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  '@{item().LastModifyTime}' AS OldWaterMarkValue FROM WaterConfigTable WHERE TableName= '@{item().TableName}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_AZSQL_INCREMENTAL_TABLE_MULTI_INPUT",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LOOKUP - GETNEW WATER MARK VALUE",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT MAX(@{item().WaterMarkColumnName}) AS NewWaterMarkValue FROM\n@{item().TableName}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_AZSQL_INCREMENTAL_TABLE_MULTI_INPUT",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "COPY DATE FOR MULTI TABLE INCREMENTAL LOAD",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "LOOKUP - GETOLD WATER MARK VALUE",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "LOOKUP - GETNEW WATER MARK VALUE",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM @{item().TableName}\nWHERE LastModifyTime >'@{activity('LOOKUP - GETOLD WATER MARK VALUE').output.firstRow.OldWaterMarkValue}'\nAND LastModifyTime <='@{activity('LOOKUP - GETNEW WATER MARK VALUE').output.firstRow.NewWaterMarkValue}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_AZSQL_INCREMENTAL_TABLE_MULTI_INPUT",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_SINGLE_TABLE_INCREMENTAL_OUTPUT",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "SP - UPDATE WATERMARK CONFIG TABLE",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "COPY DATE FOR MULTI TABLE INCREMENTAL LOAD",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[USP_UpdateWaterMarkConfigTable]",
										"storedProcedureParameters": {
											"LastModifiedTime": {
												"value": {
													"value": "@{activity('LOOKUP - GETNEW WATER MARK VALUE').output.firstRow.NewWaterMarkValue}",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"TableName": {
												"value": {
													"value": "@item().TableName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_AZSQLDB_KV",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-14T18:41:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_WATERMARK_CONFIG_MULTILOAD')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_INCREMENTAL_TABLE_MULTI_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_SINGLE_TABLE_INCREMENTAL_OUTPUT')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_20_INCREMENTAL_LOAD_MUL_TABLE_SQL_TO_BLOB_EMAIL_NOTIFICATION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LOOKUP - WATER MARK CONFIG TABLE",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AZSQL_WATERMARK_CONFIG_MULTILOAD",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOR EACH - LOOP THROUGH CONFIG TABLE",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LOOKUP - WATER MARK CONFIG TABLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LOOKUP - WATER MARK CONFIG TABLE').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "LOOKUP - GETOLD WATER MARK VALUE",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  '@{item().LastModifyTime}' AS OldWaterMarkValue FROM WaterConfigTable WHERE TableName= '@{item().TableName}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_AZSQL_INCREMENTAL_TABLE_MULTI_INPUT",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LOOKUP - GETNEW WATER MARK VALUE",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT MAX(@{item().WaterMarkColumnName}) AS NewWaterMarkValue FROM\n@{item().TableName}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_AZSQL_INCREMENTAL_TABLE_MULTI_INPUT",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "COPY DATE FOR MULTI TABLE INCREMENTAL LOAD",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "LOOKUP - GETOLD WATER MARK VALUE",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "LOOKUP - GETNEW WATER MARK VALUE",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM @{item().TableName}\nWHERE LastModifyTime >'@{activity('LOOKUP - GETOLD WATER MARK VALUE').output.firstRow.OldWaterMarkValue}'\nAND LastModifyTime <='@{activity('LOOKUP - GETNEW WATER MARK VALUE').output.firstRow.NewWaterMarkValue}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_AZSQL_INCREMENTAL_TABLE_MULTI_INPUT",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_SINGLE_TABLE_INCREMENTAL_OUTPUT",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "SP - UPDATE WATERMARK CONFIG TABLE",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "COPY DATE FOR MULTI TABLE INCREMENTAL LOAD",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[USP_UpdateWaterMarkConfigTable]",
										"storedProcedureParameters": {
											"LastModifiedTime": {
												"value": {
													"value": "@{activity('LOOKUP - GETNEW WATER MARK VALUE').output.firstRow.NewWaterMarkValue}",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"TableName": {
												"value": {
													"value": "@item().TableName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_AZSQLDB_KV",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "SUCCESS - EMAIL NOTIFICATION",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "FOR EACH - LOOP THROUGH CONFIG TABLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-65.eastus.logic.azure.com:443/workflows/fb35d1bab74b4b59a16e7219f33dbf76/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=VHoRyuEvUVItHWhPLOaPcrkZXI6h3d1JytQ2IbaI9V8",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n\"Title\":\"PIPELINE FINISHED SUCCESSFULLY\",\n\"Message\":\"INCREMENTAL DONE SUCCESSFULLY FROM AZURE SQL TO AZURE BLOB\",\n \"Data Factory Name\":\"@{pipeline().DataFactory}\",\n  \"Pipeline Name\":\"@{pipeline().Pipeline}\",\n   \"Piepline Run ID\":\"@{pipeline().RunId}\",\n    \"Time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FAILURE - EMAIL NOTIFICATION",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "FOR EACH - LOOP THROUGH CONFIG TABLE",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-65.eastus.logic.azure.com:443/workflows/fb35d1bab74b4b59a16e7219f33dbf76/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=VHoRyuEvUVItHWhPLOaPcrkZXI6h3d1JytQ2IbaI9V8",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n\"Title\":\"PIPELINE FINISHED SUCCESSFULLY\",\n\"Message\":\"PipeLine Got Failed\"\n \"Data Factory Name\":\"@{pipeline().DataFactory}\",\n  \"Pipeline Name\":\"@{pipeline().Pipeline}\",\n   \"Piepline Run ID\":\"@{pipeline().RunId}\",\n    \"Time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-15T15:15:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_WATERMARK_CONFIG_MULTILOAD')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_INCREMENTAL_TABLE_MULTI_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_SINGLE_TABLE_INCREMENTAL_OUTPUT')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_21_EMAIL_NOTIFICATON_LOGGING_AZURESQL_AZURESTROAGE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "BULK LOAD - MULTI LOAD TABLE",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_LAB_16_CASE_02_BULK_TABLE_LOAD_TO_STORAGE_AUDIT_LOGS_FAILURE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "FAILURE - EMAIL NOTIFICATION",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "BULK LOAD - MULTI LOAD TABLE",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-65.eastus.logic.azure.com:443/workflows/fb35d1bab74b4b59a16e7219f33dbf76/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=VHoRyuEvUVItHWhPLOaPcrkZXI6h3d1JytQ2IbaI9V8",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n\"Title\":\"PIPELINE NOT FINISHED SUCCESSFULLY\",\n\"Message\":\"@{activity('BULK LOAD - MULTI LOAD TABLE').error.message}\",\n \"Data Factory Name\":\"@{pipeline().DataFactory}\",\n  \"Pipeline Name\":\"@{pipeline().Pipeline}\",\n   \"Piepline Run ID\":\"@{pipeline().RunId}\",\n    \"Time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SUCCESS  - EMAIL NOTIFICATION",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "BULK LOAD - MULTI LOAD TABLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-65.eastus.logic.azure.com:443/workflows/fb35d1bab74b4b59a16e7219f33dbf76/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=VHoRyuEvUVItHWhPLOaPcrkZXI6h3d1JytQ2IbaI9V8",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n\"Title\":\"PIPELINE FINISHED SUCCESSFULLY\",\n\"Message\":\"PipeLine Got Failed\"\n \"Data Factory Name\":\"@{pipeline().DataFactory}\",\n  \"Pipeline Name\":\"@{pipeline().Pipeline}\",\n   \"Piepline Run ID\":\"@{pipeline().RunId}\",\n    \"Time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-15T17:38:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_LAB_16_CASE_02_BULK_TABLE_LOAD_TO_STORAGE_AUDIT_LOGS_FAILURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_22_COPY_FILE_LOAD_INCRMENTALLY_LAST_MODIFIED')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LOOKUP - METADATA FILE LOAD",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AZSQL_LASTMODIFIEDCONTAINER_INPUT",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOREACH - LOOP THROUGH META DATA FILE LOAD",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LOOKUP - METADATA FILE LOAD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LOOKUP - METADATA FILE LOAD').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "SET VARIABLE - UPV",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "NewProccededValue",
										"value": {
											"value": "@IF(\nlessOrEquals(addminutes(item().LPV,item().Duration),convertFromUtc(utcnow(),'india standard time'))\n,addminutes(item().LPV,item().Duration),convertFromUtc(utcnow(),'india standard time'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "COPY DATA FILE LOAD INCREMENTALLY",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "SET VARIABLE - UPV",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": {
													"value": "@convertToUtc(item().LPV,'india standard time')",
													"type": "Expression"
												},
												"modifiedDatetimeEnd": {
													"value": "@convertToUtc(variables('NewProccededValue'),'india standard time')",
													"type": "Expression"
												},
												"wildcardFileName": "*",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "LS_AZBLOB_CONTAINER_INPUT_LAST_MODIFIED",
											"type": "DatasetReference",
											"parameters": {
												"DS_SOURCE_CONTAINER_NAME": {
													"value": "@item().SourceContainerName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AZBLOB_CONTAINER_OUTUT_LAST_MODIFIED",
											"type": "DatasetReference",
											"parameters": {
												"DS_SINK_CONTAINER_PARM": {
													"value": "@item().DestinationContainerName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SP - UPDATE LPV",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "COPY DATA FILE LOAD INCREMENTALLY",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[USP_UpdateCONTAINER_LASTMODIFIED]",
										"storedProcedureParameters": {
											"SinkContainerName": {
												"value": {
													"value": "@item().DestinationContainerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"UPV": {
												"value": {
													"value": "@variables('NewProccededValue')",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_AZSQLDB_KV",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"variables": {
					"NewProccededValue": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-20T01:45:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_LASTMODIFIEDCONTAINER_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/LS_AZBLOB_CONTAINER_INPUT_LAST_MODIFIED')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_CONTAINER_OUTUT_LAST_MODIFIED')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_23_EVENT_TRIGGER_COPY_DATA_BLOB_TO_SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA FROM BLOB TO SQLDB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_EVENT_TRIGGER_INPUT",
								"type": "DatasetReference",
								"parameters": {
									"DS_CONTAINER_NAME_PARAM": {
										"value": "@pipeline().parameters.PL_SOURCE_FOLDER_PARAM",
										"type": "Expression"
									},
									"DS_FILE_NAME_PARAM": {
										"value": "@pipeline().parameters.PL_FILENAME_PARAM",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_EVENT_TRIGGER_OUTPUT_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"PL_SOURCE_FOLDER_PARAM": {
						"type": "string"
					},
					"PL_FILENAME_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-16T05:59:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_EVENT_TRIGGER_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_EVENT_TRIGGER_OUTPUT_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_24_CASE_01_TUMBLING_WINDOW_TRIGGER_WITHOUT_DEPENDENCY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - GEN2 TUMBLING WINDOW",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_TUMBLING_WINDOW_INPUT",
								"type": "DatasetReference",
								"parameters": {
									"DS_WINDOW_STARTTIME_PARAM": {
										"value": "@pipeline().parameters.PL_WindowEndTime",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_TUMBLING_WINDOW_OUTPUT",
								"type": "DatasetReference",
								"parameters": {
									"DS_SINK_WINDOW_STARTTIME_PARAM": {
										"value": "@pipeline().parameters.PL_WindowStartTime",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"PL_WindowStartTime": {
						"type": "string"
					},
					"PL_WindowEndTime": {
						"type": "string"
					},
					"PL_TriggerTime": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-16T11:12:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_TUMBLING_WINDOW_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_TUMBLING_WINDOW_OUTPUT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_24_CASE_02_PIPELINE_DEPENDENCY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WAIT FOR DEPENDENCY",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 2
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-16T10:46:16Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_25_COPY_FILE_LOAD_INCRMENTALLY_LAST_MODIFIED_SCHEDULE_TRIGGER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LOOKUP - METADATA FILE LOAD",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AZSQL_LASTMODIFIEDCONTAINER_INPUT",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOREACH - LOOP THROUGH META DATA FILE LOAD",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LOOKUP - METADATA FILE LOAD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LOOKUP - METADATA FILE LOAD').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "SET VARIABLE - UPV",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "NewProccededValue",
										"value": {
											"value": "@IF(\nlessOrEquals(addminutes(item().LPV,item().Duration),convertFromUtc(utcnow(),'india standard time'))\n,addminutes(item().LPV,item().Duration),convertFromUtc(utcnow(),'india standard time'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "COPY DATA FILE LOAD INCREMENTALLY",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "SET VARIABLE - UPV",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": {
													"value": "@convertToUtc(item().LPV,'india standard time')",
													"type": "Expression"
												},
												"modifiedDatetimeEnd": {
													"value": "@convertToUtc(variables('NewProccededValue'),'india standard time')",
													"type": "Expression"
												},
												"wildcardFileName": "*",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "LS_AZBLOB_CONTAINER_INPUT_LAST_MODIFIED",
											"type": "DatasetReference",
											"parameters": {
												"DS_SOURCE_CONTAINER_NAME": {
													"value": "@item().SourceContainerName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AZBLOB_CONTAINER_OUTUT_LAST_MODIFIED",
											"type": "DatasetReference",
											"parameters": {
												"DS_SINK_CONTAINER_PARM": {
													"value": "@item().DestinationContainerName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SP - UPDATE LPV",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "COPY DATA FILE LOAD INCREMENTALLY",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[USP_UpdateCONTAINER_LASTMODIFIED]",
										"storedProcedureParameters": {
											"SinkContainerName": {
												"value": {
													"value": "@item().DestinationContainerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"UPV": {
												"value": {
													"value": "@variables('NewProccededValue')",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_AZSQLDB_KV",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"variables": {
					"NewProccededValue": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-20T01:45:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_LASTMODIFIEDCONTAINER_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/LS_AZBLOB_CONTAINER_INPUT_LAST_MODIFIED')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZBLOB_CONTAINER_OUTUT_LAST_MODIFIED')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_26_COPY_DATA_ON_PREMISE_SQL_DATALAKEGEN2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - ON PREMISE SQL TO AZURE DATA LAKE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZSQL_VM_DATA_INPUT_SELFHOSTED",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZGEN2_OUTPUT_SELFHOSTED",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-17T10:54:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_VM_DATA_INPUT_SELFHOSTED')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZGEN2_OUTPUT_SELFHOSTED')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_27_COPY_MULTI_TABLES_ON_PREMISE_AZURESQLDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LOOKUP - ON PREMISE METADATA",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AZVM_SQL_ON_PREMISE_METADATA_SELFHOSTED",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOREACH - LOOP THROUGH META DATA",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LOOKUP - ON PREMISE METADATA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LOOKUP - ON PREMISE METADATA').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "IF CONDITION - STATUS CHECK",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().StatusFlag,'ready')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "COPY DATA - ONPREMISE SQL TO SQLDB",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_AZSQLVM_INPUT_MULTITABLE_SELFHOSTED",
														"type": "DatasetReference",
														"parameters": {
															"DS_SOURCE_TABLE_PARAM": {
																"value": "@item().TableName",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_AZSQLDB_OUTPUT_SELFHOSTED",
														"type": "DatasetReference",
														"parameters": {
															"DS_SINK_TABLE_PARAM": {
																"value": "@item().SinkContainerName",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-17T13:17:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZVM_SQL_ON_PREMISE_METADATA_SELFHOSTED')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLVM_INPUT_MULTITABLE_SELFHOSTED')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLDB_OUTPUT_SELFHOSTED')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_28_FILESYSTEM_COPYDATA_TO_AZSQLDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - FILE SYSTEM TO AZSQL DB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZFILESYSTEM_INPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZSQL_DB_FILESYSTEM_OUTPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-17T14:06:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZFILESYSTEM_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_DB_FILESYSTEM_OUTPUT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_29_CASE_01_COPY_DATA_RESTAPI_GEN2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA REST API TO GEN2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_RESTAPI_INPUT",
								"type": "DatasetReference",
								"parameters": {
									"DS_RESTAPI_SOURCE_URL": {
										"value": "@pipeline().parameters.PL_SOURCE_URL_API_PARAM",
										"type": "Expression"
									},
									"DS_RESTAPI_SOURCE_URL_VALUE": {
										"value": "@pipeline().parameters.PL_SOURCE_URL_VALUE_API_PARAM",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZDATAKEGEN2_OUTPUT_RESTAPI",
								"type": "DatasetReference",
								"parameters": {
									"DS_SINKFOLDER_NAME": {
										"value": "@pipeline().parameters.PL_SOURCE_URL_VALUE_API_PARAM",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"PL_SOURCE_URL_API_PARAM": {
						"type": "string"
					},
					"PL_SOURCE_URL_VALUE_API_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-18T06:57:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_RESTAPI_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZDATAKEGEN2_OUTPUT_RESTAPI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_29_CASE_02_COPY_DATA_RESTAPI_GEN2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FOR EACH LOOP - CREATE ARRAY FOR VALUE",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@createArray(1,2,3,4,5,6,7,8,9,10)",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "EXECUTE PIPELINE - REST API PARENT",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_LAB_29_CASE_01_COPY_DATA_RESTAPI_GEN2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"PL_SOURCE_URL_API_PARAM": "https://jsonplaceholder.typicode.com/todos/",
											"PL_SOURCE_URL_VALUE_API_PARAM": {
												"value": "@item()",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-18T06:57:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_LAB_29_CASE_01_COPY_DATA_RESTAPI_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_30_COPY_DATA_ON_PREMISE_SQL_AZURESYNAPSE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LOOKUP - TO GET ON PREMISE DATA",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT TableName,SinkContainerName,StatusFlag FROM On_PremiseSQLTablesMetData\nWHERE StatusFlag <>'Succeeded'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ON_PREMISE_SQL_SERVER_METADATA_INPUT",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOREACH - LOOP THROUGH ONPREMISE DATA",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LOOKUP - TO GET ON PREMISE DATA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LOOKUP - TO GET ON PREMISE DATA').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "COPY DATA - ON PREMISE SQL TO AZURE SYNAPSE",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": true
											},
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "LS_AZGEN2_DATAFACTORY",
												"type": "LinkedServiceReference"
											},
											"path": "azuresynapseforbulkandpolybase"
										}
									},
									"inputs": [
										{
											"referenceName": "DS_SQL_SERVER_INPUT_MULTILOAD",
											"type": "DatasetReference",
											"parameters": {
												"DS_SOURCE_DATABASE_PARAM": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AZSYNAPSE_OUTPUT_MULTILOAD",
											"type": "DatasetReference",
											"parameters": {
												"DS_SINK_SYNAPSE_TABLE_PARAM": {
													"value": "@item().SinkContainerName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SP_UPDATE_METADATA",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "COPY DATA - ON PREMISE SQL TO AZURE SYNAPSE",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[USP_UpdateMetadata]",
										"storedProcedureParameters": {
											"SinkContainerName": {
												"value": {
													"value": "@item().SinkContainerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"StatusFlag": {
												"value": "Succeeded",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_SQLSERVER",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SP_UPDATE_METADATA_FAILURE",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "COPY DATA - ON PREMISE SQL TO AZURE SYNAPSE",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[USP_UpdateMetadata]",
										"storedProcedureParameters": {
											"SinkContainerName": {
												"value": {
													"value": "@item().SinkContainerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"StatusFlag": {
												"value": "ready",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_SQLSERVER",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-18T07:43:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ON_PREMISE_SQL_SERVER_METADATA_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_SERVER_INPUT_MULTILOAD')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSYNAPSE_OUTPUT_MULTILOAD')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_SQLSERVER')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_31_INCREMENTAL_LOAD_SQL_SERVER_AZSQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LOOKUP - NEW WATER MARK VALUE",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT MAX(LastModifytime) AS NewWaterMarkValue FROM \ncustomer_table",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "LS_SQLSERVER_INPUT_QUERYFOR_INCREMENTALLOAD",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LOOK UP - OLD WATER MARK VALUE",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AZSQL_INCREMENTAL_METADATA",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "COPY DATA - INCRMENTAL LOD SQL TO AZSQL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LOOKUP - NEW WATER MARK VALUE",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LOOK UP - OLD WATER MARK VALUE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM \ncustomer_table\nWHERE LastModifytime >'@{activity('LOOK UP - OLD WATER MARK VALUE').output.firstRow.WatermarkValue}'\nAND LastModifytime<='@{activity('LOOKUP - NEW WATER MARK VALUE').output.firstRow.NewWaterMarkValue}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[usp_upsert_customer_table]",
								"sqlWriterTableType": "DataTypeforCustomerTable",
								"storedProcedureTableTypeParameterName": "customer_table"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "LS_SQLSERVER_INPUT_QUERYFOR_INCREMENTALLOAD",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZSQL_DESTINATION_INCREMENTAL_LOAD",
								"type": "DatasetReference",
								"parameters": {
									"DS_SINK_TABLE_PARM": "customer_table"
								}
							}
						]
					},
					{
						"name": "STORED PROCEDURE - UPDATE METADATA",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "COPY DATA - INCRMENTAL LOD SQL TO AZSQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_UpdatewatermarktableSqlServerSQlDB]",
							"storedProcedureParameters": {
								"LastestModifyTime": {
									"value": {
										"value": "@{activity('LOOKUP - NEW WATER MARK VALUE').output.firstRow.NewWaterMarkValue}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Sourcetable": {
									"value": "customer_table",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AZSQLDB_KV",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-19T03:50:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LS_SQLSERVER_INPUT_QUERYFOR_INCREMENTALLOAD')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_INCREMENTAL_METADATA')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_DESTINATION_INCREMENTAL_LOAD')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_32_INCREMENTAL_LOAD_SQL_SERVER_AZSQL_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FOREACH - LOOP THROUGH INCREMENTAL LOAD",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LOOKUP - INCREMENTAL CONFIG DATA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LOOKUP - INCREMENTAL CONFIG DATA').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "LOOKUP - NEW WATER MARK VALUE",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "SELECT MAX(@{item().WaterMakr_Column}) AS NewWaterMarkValue FROM \n@{item().TABLE_NAME}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "LS_SQLSERVER_INPUT_QUERYFOR_INCREMENTALLOAD",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LOOK UP - OLD WATER MARK VALUE",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT TableName,WatermarkValue FROM watermarktableSqlServerSQlDB\nWHERE TableName='@{item().TABLE_NAME}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_AZSQL_INCREMENTAL_METADATA",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "COPY DATA - INCRMENTAL LOD SQL TO AZSQL",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "LOOK UP - OLD WATER MARK VALUE",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "LOOKUP - NEW WATER MARK VALUE",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM \n@{item().TABLE_NAME}\nWHERE @{item().WaterMakr_Column} >'@{activity('LOOK UP - OLD WATER MARK VALUE').output.firstRow.WatermarkValue}'\nAND @{item().WaterMakr_Column}<='@{activity('LOOKUP - NEW WATER MARK VALUE').output.firstRow.NewWaterMarkValue}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"sqlWriterStoredProcedureName": {
												"value": "@{item().StoredProcedureForMigration}",
												"type": "Expression"
											},
											"sqlWriterTableType": {
												"value": "@{item().Table_Type}",
												"type": "Expression"
											},
											"storedProcedureTableTypeParameterName": {
												"value": "@{item().TABLE_NAME}",
												"type": "Expression"
											},
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "LS_SQLSERVER_INPUT_QUERYFOR_INCREMENTALLOAD",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AZSQL_INCREMENTAL_OUTPUT_SINK",
											"type": "DatasetReference",
											"parameters": {
												"DS_SINK_PARAM": {
													"value": "@{item().TABLE_NAME}",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "STORED PROCEDURE - UPDATE METADATA",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "COPY DATA - INCRMENTAL LOD SQL TO AZSQL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_UpdatewatermarktableSqlServerSQlDB]",
										"storedProcedureParameters": {
											"LastestModifyTime": {
												"value": {
													"value": "@{activity('LOOKUP - NEW WATER MARK VALUE').output.firstRow.NewWaterMarkValue}",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"Sourcetable": {
												"value": {
													"value": "@activity('LOOK UP - OLD WATER MARK VALUE').output.firstRow.TableName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_AZSQLDB_KV",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "LOOKUP - INCREMENTAL CONFIG DATA",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_INCREMENTAL_CONFIGDATA_MULTILOAD",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-19T08:20:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_INCREMENTAL_CONFIGDATA_MULTILOAD')]",
				"[concat(variables('factoryId'), '/datasets/LS_SQLSERVER_INPUT_QUERYFOR_INCREMENTALLOAD')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_INCREMENTAL_METADATA')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_INCREMENTAL_OUTPUT_SINK')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_33_COPY_DATA_AMAZON_S3_GEN2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - AWS S3 TO GEN2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AmazonS3ReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_CLOUD_AWS_INPUT_S3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZSQL_GEN2_S3_OUTPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-19T12:45:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CLOUD_AWS_INPUT_S3')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_GEN2_S3_OUTPUT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_34_COPYDATA_SALESFORCE_GEN2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LOOK UP METADATA - SALES FORCE",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "DS_SALESFORCE_INPTUT_METADATA",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOREACH - LOOP THROUGH METADATA",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LOOK UP METADATA - SALES FORCE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LOOK UP METADATA - SALES FORCE').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "COPY DATA FROM SALES FORCE TO GEN2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"readBehavior": "query"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_SOURCE_INPUT_SALESFORCE",
											"type": "DatasetReference",
											"parameters": {
												"DS_SOURCE_TABLE_PARAM": {
													"value": "@item().sourcenam__c",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AZGEN2_FROM_SALES_FORCE_OUTPUT",
											"type": "DatasetReference",
											"parameters": {
												"DS_SINK_TABLE_PARAM": {
													"value": "@item().sinkname__c",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-19T20:21:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SALESFORCE_INPTUT_METADATA')]",
				"[concat(variables('factoryId'), '/datasets/DS_SOURCE_INPUT_SALESFORCE')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZGEN2_FROM_SALES_FORCE_OUTPUT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_35_COPY_DATA_SNOWFLAKE_TO_GEN2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - SNOW FLAKE TO GEN2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeSource",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "LS_AZBLOB_SAS",
									"type": "LinkedServiceReference"
								},
								"path": "csvinput"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SNOWFALKE_INPUT_FOR_SNOWFLAKE_TO_GEN2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_GEN2_OUTPUT_SNOWFLAKE_TO_GEN2_ACTIVITIY",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-20T02:11:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SNOWFALKE_INPUT_FOR_SNOWFLAKE_TO_GEN2')]",
				"[concat(variables('factoryId'), '/datasets/DS_GEN2_OUTPUT_SNOWFLAKE_TO_GEN2_ACTIVITIY')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB_SAS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_36_COPY_DATA_SQLDB_COSMOSDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - SQLDB TO COSMOS DB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_AZSQL_COSMOSDB_INPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_COSMOS_OUTPUT_AZSQLDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-20T02:26:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_COSMOSDB_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_COSMOS_OUTPUT_AZSQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_37_COPY_EMPLOYEE_DATA_COPY_SWITCH_CASE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - EMPLOYEE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SOURCE_EMPLOYEE_DATA_SWITCH_CASE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SINK_EMPLOYEE_DATA_SWITCH_CASE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-22T14:08:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SOURCE_EMPLOYEE_DATA_SWITCH_CASE')]",
				"[concat(variables('factoryId'), '/datasets/DS_SINK_EMPLOYEE_DATA_SWITCH_CASE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_37_DELETE_ARCHIEVE_DATA_SWITCH_CASE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DELETE ARCHIEVE DATA",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ARCHIEVE_CUSTOMER_DATA_SWITCH_CASE",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": "*",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-23T01:49:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ARCHIEVE_CUSTOMER_DATA_SWITCH_CASE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_37_FINAL_SWTICH_CASE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SWITCH CASE FOR ACTIVITIES",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.PL_SWTICH_CASE_PARAM",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "Move",
									"activities": [
										{
											"name": "EXECUTE PIPELINE - MOVE",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "PL_LAB_37_MOVE_CUSTOMER_DATA_SWITCH_CASE",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {}
											}
										}
									]
								},
								{
									"value": "Copy",
									"activities": [
										{
											"name": "EXECUTE PIPELINE - COPY",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "PL_LAB_37_COPY_EMPLOYEE_DATA_COPY_SWITCH_CASE",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {}
											}
										}
									]
								},
								{
									"value": "Delete",
									"activities": [
										{
											"name": "EXECUTE PIPELINE - DELETE",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "PL_LAB_37_DELETE_ARCHIEVE_DATA_SWITCH_CASE",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"PL_SWTICH_CASE_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-23T01:41:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_LAB_37_MOVE_CUSTOMER_DATA_SWITCH_CASE')]",
				"[concat(variables('factoryId'), '/pipelines/PL_LAB_37_COPY_EMPLOYEE_DATA_COPY_SWITCH_CASE')]",
				"[concat(variables('factoryId'), '/pipelines/PL_LAB_37_DELETE_ARCHIEVE_DATA_SWITCH_CASE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_37_MOVE_CUSTOMER_DATA_SWITCH_CASE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY DATA - CUSTOMER DATA",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_GEN2_INPUT_CUSTOMER_DATA_SWTICH_CASE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SINK_CUSTOMER_DATA_SWITCH_CASE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "COPY DATA CUSTOMER DATA INTO ARCHIEVE",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "COPY DATA - CUSTOMER DATA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_GEN2_INPUT_CUSTOMER_DATA_SWTICH_CASE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ARCHIEVE_CUSTOMER_DATA_SWITCH_CASE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DELETE - CUSTOMER DATA",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "COPY DATA CUSTOMER DATA INTO ARCHIEVE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_GEN2_INPUT_CUSTOMER_DATA_SWTICH_CASE",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": "*",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-23T01:49:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_GEN2_INPUT_CUSTOMER_DATA_SWTICH_CASE')]",
				"[concat(variables('factoryId'), '/datasets/DS_SINK_CUSTOMER_DATA_SWITCH_CASE')]",
				"[concat(variables('factoryId'), '/datasets/DS_ARCHIEVE_CUSTOMER_DATA_SWITCH_CASE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_38_UNTIL_ACTIVITY_WITH_REST_API_CALL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UNTIL ACTIVITY - REST API TO GEN2",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(int(variables('CurrentID')),0)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "COPY DATA REST API TO GEN2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_SOURCE_REST_API_INPUT_UNTIL_ACTIVITY",
											"type": "DatasetReference",
											"parameters": {
												"DS_SOURCE_URL_PARAM": "https://jsonplaceholder.typicode.com/todos/",
												"DS_SOURCE_RELATIVE_URL_PARAM": {
													"value": "@variables('CurrentID')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_SINK_REST_API_GEN2_UNTIL_ACTIVITY",
											"type": "DatasetReference",
											"parameters": {
												"DS_SINK_FOLDER_NAME_PARAM": {
													"value": "@variables('CurrentID')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "CHECK FOR CURRENT VALUE WITH FINAL ID",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "COPY DATA REST API TO GEN2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(int(variables('CurrentID')),int(variables('FinalID')))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "SET TEMPID VALUE",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "tempID",
													"value": {
														"value": "@string(add(int(variables('CurrentID')),1))",
														"type": "Expression"
													}
												}
											},
											{
												"name": "SET CURRENT ID",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "SET TEMPID VALUE",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"variableName": "CurrentID",
													"value": {
														"value": "@variables('tempID')",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "SET CURRENT ID FOR EXIT",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "CurrentID",
													"value": "0"
												}
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"variables": {
					"CurrentID": {
						"type": "String",
						"defaultValue": "1"
					},
					"FinalID": {
						"type": "String",
						"defaultValue": "10"
					},
					"tempID": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-22T13:27:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SOURCE_REST_API_INPUT_UNTIL_ACTIVITY')]",
				"[concat(variables('factoryId'), '/datasets/DS_SINK_REST_API_GEN2_UNTIL_ACTIVITY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_39_CHILD_INCREMENTAML_FILE_COPY_WITHPUT_LPV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GET META DATA - GET CHILD ITEMS",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_GEN2_INPUT_GET_FILES_WOUT_LPV",
								"type": "DatasetReference",
								"parameters": {
									"DS_GETFOLDER_FOR_FILES_PARAM": {
										"value": "@pipeline().parameters.PL_CHILD_FOLDER_NAME_PARAM",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "FOREACH LOOP - LOOP THROUGH FILES",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GET META DATA - GET CHILD ITEMS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET META DATA - GET CHILD ITEMS').output.childitems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GET METADATA - LAST MODIFIED",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_SOURCE_GETFILE_LAST_MODIFIED_WOUT_LPV",
											"type": "DatasetReference",
											"parameters": {
												"DS_SOURCE_FOLDER_NAME_PARAM": {
													"value": "@pipeline().parameters.PL_CHILD_FOLDER_NAME_PARAM",
													"type": "Expression"
												},
												"DS_SOURCE_FILE_NAME_PARAM": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "LIST ALL LAST MODIFIED VALUES FOR FILES",
									"type": "AppendVariable",
									"dependsOn": [
										{
											"activity": "GET METADATA - LAST MODIFIED",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "LADates",
										"value": {
											"value": "@activity('GET METADATA - LAST MODIFIED').output.lastModified",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "GET LATEST DATE",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "FOREACH LOOP - LOOP THROUGH FILES",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LatestDate",
							"value": {
								"value": "@last(variables('LADates'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "COPY DATA - INCREMENTAL FILE COPY",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GET LATEST DATE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@variables('LatestDate')",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_GEN2_INPUT_GET_FILES_WOUT_LPV",
								"type": "DatasetReference",
								"parameters": {
									"DS_GETFOLDER_FOR_FILES_PARAM": {
										"value": "@pipeline().parameters.PL_CHILD_FOLDER_NAME_PARAM",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_GEN2_SINK_FOLDER_FILE_WOUT_LPV",
								"type": "DatasetReference",
								"parameters": {
									"DS_SINK_FOLDER_WOUTLPV_PARAM": {
										"value": "@pipeline().parameters.PL_CHILD_FOLDER_NAME_PARAM",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"PL_CHILD_FOLDER_NAME_PARAM": {
						"type": "string"
					}
				},
				"variables": {
					"LatestDate": {
						"type": "String"
					},
					"LADates": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-22T12:10:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_GEN2_INPUT_GET_FILES_WOUT_LPV')]",
				"[concat(variables('factoryId'), '/datasets/DS_GEN2_SINK_FOLDER_FILE_WOUT_LPV')]",
				"[concat(variables('factoryId'), '/datasets/DS_SOURCE_GETFILE_LAST_MODIFIED_WOUT_LPV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_39_PARENT_INCREMENTAL_COPY_FILES_WITHOUT_LPV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GET META DATA - LOOP THROUGH FOLDERS",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_AZGEN2_WOUT_LPV_GET_FOLDER_NAMES",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "FOREACH - LOOP THROUGH FOLDERS",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GET META DATA - LOOP THROUGH FOLDERS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET META DATA - LOOP THROUGH FOLDERS').output.childitems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "EXECUTE PIPELINE - LOOP THROUGH FILES",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_LAB_39_CHILD_INCREMENTAML_FILE_COPY_WITHPUT_LPV",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"PL_CHILD_FOLDER_NAME_PARAM": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-22T12:07:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZGEN2_WOUT_LPV_GET_FOLDER_NAMES')]",
				"[concat(variables('factoryId'), '/pipelines/PL_LAB_39_CHILD_INCREMENTAML_FILE_COPY_WITHPUT_LPV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_40_CHILD_NESTED_FOREACH_ALTERNATED_SOLUTION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GET META DATA LOOP THROUGH FOLDER FILES",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_AZGEN2_INPUT_GETFILES_INPUT_NESTED_FOREACH",
								"type": "DatasetReference",
								"parameters": {
									"DS_FOLDER_NAME_PARAM_NESTED_FOREACH": {
										"value": "@pipeline().parameters.PL_CHILD_PIPELINE_FOLDER_PARAM",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "FOREACH - LOOP THROUGH FILES",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GET META DATA LOOP THROUGH FOLDER FILES",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET META DATA LOOP THROUGH FOLDER FILES').output.childitems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "COPY DATA - AZ GEN2 INPUT TO OUTPUT GEN2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFileName": "*",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_AZGEN2_INPUT_GETFILES_INPUT_NESTED_FOREACH",
											"type": "DatasetReference",
											"parameters": {
												"DS_FOLDER_NAME_PARAM_NESTED_FOREACH": {
													"value": "@pipeline().parameters.PL_CHILD_PIPELINE_FOLDER_PARAM",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_SINK_GEN2_NESTED_FOREACH_FOLDER_FILES",
											"type": "DatasetReference",
											"parameters": {
												"DS_FOLDER_SINK_NESTED_FOREACH_PARAM": {
													"value": "@pipeline().parameters.PL_CHILD_PIPELINE_FOLDER_PARAM",
													"type": "Expression"
												},
												"DS_FILES_SINK_NESTED_FOREACH_PARAM": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"PL_CHILD_PIPELINE_FOLDER_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-22T11:11:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZGEN2_INPUT_GETFILES_INPUT_NESTED_FOREACH')]",
				"[concat(variables('factoryId'), '/datasets/DS_SINK_GEN2_NESTED_FOREACH_FOLDER_FILES')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_40_PARENT_NESTED_FOREACH_ALTERNATED_SOLUTION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GET META DATA - GET DIRECTORY NAMES",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_AZGEN2_GETFOLDERS_NAMES_INPUT_NESTED_FOREACH",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "FOREACH - LOOP THROUGH FOLDER",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GET META DATA - GET DIRECTORY NAMES",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET META DATA - GET DIRECTORY NAMES').output.childitems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "INVOKE CHILD PIPELINE TO LOOP THROUGH FOLDERS",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_LAB_40_CHILD_NESTED_FOREACH_ALTERNATED_SOLUTION",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"PL_CHILD_PIPELINE_FOLDER_PARAM": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-22T11:04:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZGEN2_GETFOLDERS_NAMES_INPUT_NESTED_FOREACH')]",
				"[concat(variables('factoryId'), '/pipelines/PL_LAB_40_CHILD_NESTED_FOREACH_ALTERNATED_SOLUTION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_41_COPY_DATA_FROM_AZSQLDB_GEN2_USING_DATAFLOW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AZ SQL TO GEN2 - DATA FLOW",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_AZSQLDB_GEN2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SalesOrderDetails": {},
									"LoadDataIntoGen2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-24T02:39:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_AZSQLDB_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_42_COPY_DATA_AZSQL_GEN2_AGGREGATE_DERIVED')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AZSQL TO GEN2 AGGREGATE DATA FLOW",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_AZSQLDB_GEN2_AGGREGATE_DERIVED",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ProductData": {},
									"ProductSinkData": {},
									"ProductSinkAggregateData": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-24T05:22:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_AZSQLDB_GEN2_AGGREGATE_DERIVED')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_43_COPY_DATA_AZSQLDB_GEN2_FULLOUTER_JOIN')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF - AZSQLDB TO GEN2 JOINS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_AZSQLDB_GEN2_FULLOUTER_JOIN",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ProductDataSource": {},
									"SalesOrderDetails": {},
									"FulllOuterJoinSinkData": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-24T09:31:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_AZSQLDB_GEN2_FULLOUTER_JOIN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_43_COPY_DATA_AZSQLDB_GEN2_INNER_JOIN')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF - AZSQLDB TO GEN2 JOINS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_AZSQLDB_GEN2_INNER_JOIN",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ProductDataSource": {},
									"SalesOrderDetails": {},
									"InnerJoinSinkData": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-24T06:09:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_AZSQLDB_GEN2_INNER_JOIN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_43_COPY_DATA_AZSQLDB_GEN2_LEFT_JOIN')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF - AZSQLDB TO GEN2 JOINS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_AZSQLDB_GEN2_LEFT_JOIN",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ProductDataSource": {},
									"SalesOrderDetails": {},
									"LeftJoinSinkData": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-24T06:08:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_AZSQLDB_GEN2_LEFT_JOIN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_43_COPY_DATA_AZSQLDB_GEN2_RIGHT_JOIN')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF - AZSQLDB TO GEN2 JOINS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_AZSQLDB_GEN2_RIGHT_JOIN",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ProductDataSource": {},
									"SalesOrderDetails": {},
									"RightJoinSinkData": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-24T06:15:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_AZSQLDB_GEN2_RIGHT_JOIN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_44_COPY_DATA_AZSQL_GEN2_CONDITIONAL_SPLIT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF - UNION AND CONDITIONAL SPLIT",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF - AZSQLDB WITH UNION AND CONDITIONAL_SPLIT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EmployeeSource": {},
									"EmployeeSourcePartTwo": {},
									"Labdata": {},
									"ITData": {},
									"AccountData": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-25T01:32:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF - AZSQLDB WITH UNION AND CONDITIONAL_SPLIT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_45_COPYDATA_AZSQL_UNION_EXISTS_DF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF - UNION AND EXISTS TRANSFORMATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF - AZSQLDB WITH UNION AND EXISTS TRANSFORMATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EmployeeSource": {},
									"EmployeeSourcePartTwo": {},
									"EmployeeDataSinkForCheck": {},
									"CompleteEmployeeSinkData": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-25T01:15:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF - AZSQLDB WITH UNION AND EXISTS TRANSFORMATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_46_REMOVE_DUPLICATES_DF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF - REMOVE DUPLICATES",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_GEN2_REMOVE_DUPLICATES_STORE_SUMMARY",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CreditCardData": {},
									"UniquedataCreditData": {},
									"ToppersData": {},
									"CreditData": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-25T03:37:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_GEN2_REMOVE_DUPLICATES_STORE_SUMMARY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_47_LOOKUP_MERGE_TRANSFORMATION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF - MERGE LOOKUP",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_AZGEN2_DB_JOIN_LOOKUP",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CustData": {},
									"OrderData": {},
									"CustomerOrderData": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Coarse"
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-25T18:41:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_AZGEN2_DB_JOIN_LOOKUP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_48_COPY_DATA_GEN2_SQLDB_SCD_TYP_ONE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF - GEN2 TO SQL SCD TYP 1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_AZGEN2_SQLDB_SCD_TYPE_ONE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"AzGenCustDataSCD": {
										"DS_PARAM_SOURCE_PATH": "cust/2021/06/24"
									},
									"AZSQLDBDimCustomer": {},
									"AZSQLDBSINKSCD": {},
									"SinkForUpdateAZSQLDB": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-02T03:54:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_AZGEN2_SQLDB_SCD_TYPE_ONE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_49_AZGEN2_SQL_SCD_TYP_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF - AZ GEN2 TO SQL SCD TYPE 2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_AZGEN2_SQLDB_SCD_TYPE2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Gen2CustomerData": {
										"DS_PARAM_SOURCE_PATH": "cust/2021/06/24"
									},
									"DimCustomerTargetData": {},
									"DimCustomerInsert": {},
									"DimCustomerHistory": {},
									"DimCustomerUpdateInsert": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-02T03:54:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_AZGEN2_SQLDB_SCD_TYPE2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_50_FLATTERN_RANK_TRANSFORMAITON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF - FLATTERN AND RANK",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_FALTTERN_TRANSFORMATIO_HIGH_PROFIT_RANK",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceFlatterndataOrg": {},
									"sqltableToppersData": {},
									"orglistinfordata": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-02T03:54:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_FALTTERN_TRANSFORMATIO_HIGH_PROFIT_RANK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_51_PIVOT_TRANSFORMATION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF - PIVOT TRANSFORMATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_PIVOT_TRANSFORMATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CreditCardData": {},
									"PivotData": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF - UNPIVOT TRANSFORMATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DF - PIVOT TRANSFORMATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_UNPivoted_Transformation",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"PivotedData": {},
									"UnPivotedCreditCardData": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_PIVOT_TRANSFORMATION')]",
				"[concat(variables('factoryId'), '/dataflows/DF_UNPivoted_Transformation')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LAB_52_DATABRICKS_INTEGRATION_ADF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/badarikrishnachaitanya@outlook.com/Data Bricks Integration With ADF",
							"baseParameters": {
								"l_type": "incremental",
								"p_date": "2021/07/28"
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AZUREDATABRICKS",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "MASTER_PROGRAM_PIPELINES"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZUREDATABRICKS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_SOURCE_PIVOTDATA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "PivotedData.csv",
						"fileSystem": "pivotabledata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Credit_ID",
						"type": "String"
					},
					{
						"name": "Credit_Name",
						"type": "String"
					},
					{
						"name": "Master",
						"type": "String"
					},
					{
						"name": "visa",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_GEN2_SCD_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_PARAM_SOURCE_PATH": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().DS_PARAM_SOURCE_PATH",
							"type": "Expression"
						},
						"fileSystem": "cloudpandith"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "cust_id",
						"type": "String"
					},
					{
						"name": "custname",
						"type": "String"
					},
					{
						"name": "manager",
						"type": "String"
					},
					{
						"name": "city",
						"type": "String"
					},
					{
						"name": "phno",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ARCHIEVE_CUSTOMER_DATA_SWITCH_CASE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "customerarchievedata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZBLOB_BLOB_ALLCSV_FILE_OUTPUT_DATASET')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "outputonlycsv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZBLOB_BLOB_ALL_FILES_INPUT_DATASET')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "TotalChildren",
						"type": "String"
					},
					{
						"name": "YearlyIncome",
						"type": "String"
					},
					{
						"name": "EnglishEducation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZBLOB_BLOB_ALL_FILES_OUTPUT_DATASET')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "TotalChildren",
						"type": "String"
					},
					{
						"name": "YearlyIncome",
						"type": "String"
					},
					{
						"name": "EnglishEducation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZBLOB_BLOB_INPUT_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "outputcsvparam"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "TotalChildren",
						"type": "String"
					},
					{
						"name": "YearlyIncome",
						"type": "String"
					},
					{
						"name": "EnglishEducation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZBLOB_BLOB_INPUT_DATASET')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "BachelorsAndGraduationDegreeData.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "TotalChildren",
						"type": "String"
					},
					{
						"name": "YearlyIncome",
						"type": "String"
					},
					{
						"name": "EnglishEducation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZBLOB_BLOB_INPUT_PARAM_CSV_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_SOURCE_FILE_NAME_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().DS_SOURCE_FILE_NAME_PARAM",
							"type": "Expression"
						},
						"container": "inputcsvjson"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "TotalChildren",
						"type": "String"
					},
					{
						"name": "YearlyIncome",
						"type": "String"
					},
					{
						"name": "EnglishEducation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZBLOB_BLOB_OUTPUT_DATASET')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZBLOB_BLOB_OUTPUT_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "covertedcsvtojson"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZBLOB_BLOB_OUTPUT_PARAM_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_OUTPUT_PARAM_CSV_JSON": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().DS_OUTPUT_PARAM_CSV_JSON",
							"type": "Expression"
						},
						"container": "outputcsvparam"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZBLOB_BLOB_OUTPUT_PARAM_JSON_PARAM')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_SINK_FILE_NAME_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().DS_SINK_FILE_NAME_PARAM",
							"type": "Expression"
						},
						"container": "outputjsonparam"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZBLOB_CONTAINER_METADATA_DETAILS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "MetData_ContainerExists.txt",
						"container": "containermetadatadetails"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SourceFolder",
						"type": "String"
					},
					{
						"name": "TargetFolder",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZBLOB_CONTAINER_METDATA_EXTRACT_INPUT_OUTPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "MetData_Container.txt",
						"container": "containermetadatadetails"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SourceFolder",
						"type": "String"
					},
					{
						"name": "TargetFolder",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZBLOB_CONTAINER_OUTUT_LAST_MODIFIED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB_KV",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_SINK_CONTAINER_PARM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().DS_SINK_CONTAINER_PARM",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZBLOB_DEGREEDATA_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "inputon12062021"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "TotalChildren",
						"type": "String"
					},
					{
						"name": "YearlyIncome",
						"type": "String"
					},
					{
						"name": "EnglishEducation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZBLOB_DEGREEDATA_OUTPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "degreedataoutput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZBLOB_SINK_KV_OUTPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB_KV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "keyvaultoutput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZDATAKEGEN2_OUTPUT_RESTAPI')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_SINKFOLDER_NAME": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().DS_SINKFOLDER_NAME",
							"type": "Expression"
						},
						"fileSystem": "restapioutputfolder"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZFILESYSTEM_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_FILESYSTEM_AZVM",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "OrdersData.txt"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EmpID",
						"type": "String"
					},
					{
						"name": "EmpName",
						"type": "String"
					},
					{
						"name": "Location",
						"type": "String"
					},
					{
						"name": "LastModifyTime",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESYSTEM_AZVM')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZGEN2_CUST_DATA_DF')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "CustData",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "CustData.xlsx",
						"fileSystem": "mergelookinput"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Cust_id",
						"type": "String"
					},
					{
						"name": "Cust_name",
						"type": "String"
					},
					{
						"name": "Cust_Score",
						"type": "String"
					},
					{
						"name": "Order_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZGEN2_FROM_SALES_FORCE_OUTPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_SINK_TABLE_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().DS_SINK_TABLE_PARAM",
							"type": "Expression"
						},
						"fileSystem": "salesforceoutput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZGEN2_GETFOLDERS_NAMES_INPUT_NESTED_FOREACH')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "nestedforeachinput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "TotalChildren",
						"type": "String"
					},
					{
						"name": "YearlyIncome",
						"type": "String"
					},
					{
						"name": "EnglishEducation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZGEN2_INPUT_GETFILES_INPUT_NESTED_FOREACH')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_FOLDER_NAME_PARAM_NESTED_FOREACH": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().DS_FOLDER_NAME_PARAM_NESTED_FOREACH",
							"type": "Expression"
						},
						"fileSystem": "nestedforeachinput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "TotalChildren",
						"type": "String"
					},
					{
						"name": "YearlyIncome",
						"type": "String"
					},
					{
						"name": "EnglishEducation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZGEN2_ORDER_DATA_DF')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "OrderData",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "CustData.xlsx",
						"fileSystem": "mergelookinput"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Order_ID",
						"type": "String"
					},
					{
						"name": "Order_name",
						"type": "String"
					},
					{
						"name": "Order_date",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZGEN2_OUTPUT_SELFHOSTED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "selfhostedoutput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZGEN2_SINK_DATAFLOW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "dataflowbasic"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZGEN2_WOUT_LPV_GET_FOLDER_NAMES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "withoutlpv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSNOWFLAKE_OUTPUT_FROM_GEN2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SNOWFLAKE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [],
				"typeProperties": {
					"schema": "SampleSchema",
					"table": "employeeData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SNOWFLAKE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQLBD_COMPLETE_DF')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_KV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmpID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmpName",
						"type": "varchar"
					},
					{
						"name": "Designation",
						"type": "varchar"
					},
					{
						"name": "Department",
						"type": "varchar"
					},
					{
						"name": "JoiningDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EmployeeModifiedDataSink"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQLDB_GEN_CUSTORDERS_DF')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_KV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "CustomerOrderData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQLDB_INPUT_PARAM')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_SOURCE_SCHEMA_NAME": {
						"type": "string"
					},
					"DS_SOURCE_TABLE_NAME": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().DS_SOURCE_SCHEMA_NAME",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().DS_SOURCE_TABLE_NAME",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQLDB_KV_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_KV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ProductNumber",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SellStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SellEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DiscontinuedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ThumbNailPhoto",
						"type": "varbinary"
					},
					{
						"name": "ThumbnailPhotoFileName",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Product"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQLDB_OUTPUT_SELFHOSTED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_KV",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_SINK_TABLE_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().DS_SINK_TABLE_PARAM",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQLDB_SALESORDER_DETAILS_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesOrderDetailID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderQty",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "UnitPriceDiscount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "LineTotal",
						"type": "decimal",
						"precision": 38,
						"scale": 6
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "SalesOrderDetail"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQLDB_SCD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_KV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "surrogate_key",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "cust_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "custname",
						"type": "varchar"
					},
					{
						"name": "manager",
						"type": "varchar"
					},
					{
						"name": "city",
						"type": "varchar"
					},
					{
						"name": "created_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "created_by",
						"type": "varchar"
					},
					{
						"name": "updated_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "updated_by",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dim_cust"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQLDB_SOURCE_ONE_DF')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_KV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmpID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmpName",
						"type": "varchar"
					},
					{
						"name": "Designation",
						"type": "varchar"
					},
					{
						"name": "Department",
						"type": "varchar"
					},
					{
						"name": "JoiningDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EmployeeDataSource"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQLDB_SOURCE_TWO_DF')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_KV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmpID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmpName",
						"type": "varchar"
					},
					{
						"name": "Designation",
						"type": "varchar"
					},
					{
						"name": "Department",
						"type": "varchar"
					},
					{
						"name": "JoiningDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EmployeeDataSource2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQLDB_TOPPERSDATA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_KV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "ToppersData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQLSTORAGE_OUTPUT_FROM_SQLDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "sqldboutput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQLVM_INPUT_MULTITABLE_SELFHOSTED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZVM_SQL_ON_PREMISE",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_SOURCE_TABLE_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().DS_SOURCE_TABLE_PARAM",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZVM_SQL_ON_PREMISE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQL_BULLOAD_TABLE_METADATA_STORAGE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SchemaName",
						"type": "varchar"
					},
					{
						"name": "TableName",
						"type": "varchar"
					},
					{
						"name": "SinkContaineName",
						"type": "varchar"
					},
					{
						"name": "SinkFileName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "MetaData_BulkTableLoadIntoStorage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQL_COSMOSDB_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_KV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ProductNumber",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SellStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SellEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DiscontinuedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ThumbNailPhoto",
						"type": "varbinary"
					},
					{
						"name": "ThumbnailPhotoFileName",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Product"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQL_DB_DESTINATION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_DESTINATION",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_SINK_SCHEMA_NAME": {
						"type": "string"
					},
					"DS_SINK_TABLE_NAME": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().DS_SINK_SCHEMA_NAME",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().DS_SINK_TABLE_NAME",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_DESTINATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQL_DB_FILESYSTEM_OUTPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_KV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Orderderdata"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQL_DESTINATION_INCREMENTAL_LOAD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_KV",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_SINK_TABLE_PARM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().DS_SINK_TABLE_PARM",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQL_DIM_CUST_SCDTYPE_2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_KV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "surrogate_key",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "cust_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "custname",
						"type": "varchar"
					},
					{
						"name": "manager",
						"type": "varchar"
					},
					{
						"name": "city",
						"type": "varchar"
					},
					{
						"name": "phno",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "startdate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "enddate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "in_active",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "created_by",
						"type": "varchar"
					},
					{
						"name": "updated_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "updated_by",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dim_cust_SCD2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQL_GEN2_S3_OUTPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "amazons3bucket"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQL_INCREMENTAL_METADATA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_KV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TableName",
						"type": "varchar"
					},
					{
						"name": "WatermarkValue",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "watermarktableSqlServerSQlDB"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQL_INCREMENTAL_OUTPUT_SINK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_KV",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_SINK_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "dbo\n",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().DS_SINK_PARAM",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQL_INCREMENTAL_TABLE_MULTI_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_KV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQL_INCREMENTAL_WATERMARK_COLUMN_SINGLE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_KV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TableName",
						"type": "varchar"
					},
					{
						"name": "LastModifyTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "WaterMarkTable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQL_INREMENTAL_LOAD_Employee')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_KV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmpID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmpName",
						"type": "varchar"
					},
					{
						"name": "Location",
						"type": "varchar"
					},
					{
						"name": "LastModifyTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EmployeeTable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQL_LASTMODIFIEDCONTAINER_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_KV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SourceContainerName",
						"type": "varchar"
					},
					{
						"name": "Duration",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LPV",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DestinationContainerName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "METADATA_LOAD_CONTAINER_LASTMODIFIED"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQL_SCHEMA_TABLE_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_SCHEMA_NAME_PARAM": {
						"type": "string"
					},
					"DS_TABLE_NAME_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().DS_SCHEMA_NAME_PARAM",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().DS_TABLE_NAME_PARAM",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQL_SOURCE_FOR_DATAFLOW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_KV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesOrderDetailID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderQty",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "UnitPriceDiscount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "LineTotal",
						"type": "decimal",
						"precision": 38,
						"scale": 6
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "SalesOrderDetail"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQL_TABLE_PRODUCT_SOURCE_DATAFLOW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_KV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ProductNumber",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SellStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SellEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DiscontinuedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ThumbNailPhoto",
						"type": "varbinary"
					},
					{
						"name": "ThumbnailPhotoFileName",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Product"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQL_TOPPERS_PROFIT_ORG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_KV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "toppperProfitOrg"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQL_VM_DATA_INPUT_SELFHOSTED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZVM_SQL_ON_PREMISE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "EmpID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmpName",
						"type": "varchar"
					},
					{
						"name": "Location",
						"type": "varchar"
					},
					{
						"name": "LastModifyTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EmployeeTable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZVM_SQL_ON_PREMISE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQL_WATERMARK_CONFIG_MULTILOAD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_KV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TableName",
						"type": "varchar"
					},
					{
						"name": "WaterMarkColumnName",
						"type": "varchar"
					},
					{
						"name": "LastModifyTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "WaterConfigTable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSYNAPSE_OUTPUT_MULTILOAD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_SINK_SYNAPSE_TABLE_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().DS_SINK_SYNAPSE_TABLE_PARAM",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSynapseAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZVM_SQL_ON_PREMISE_METADATA_SELFHOSTED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZVM_SQL_ON_PREMISE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "TableName",
						"type": "varchar"
					},
					{
						"name": "SinkContainerName",
						"type": "varchar"
					},
					{
						"name": "StatusFlag",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "On_PremiseSQLTablesMetData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZVM_SQL_ON_PREMISE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BLOB_BLOB_INPUT_PARAMETER')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_INPUT_PARAM_CONTAINER": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().DS_INPUT_PARAM_CONTAINER",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BLOB_BLOB_OUTPUT_PARAMETER')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_OUTPUT_PARAM_CONTAINER": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().DS_OUTPUT_PARAM_CONTAINER",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BULKBLOBSTORAGE_FROM_SQL_OUTPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_CONTAINER_NAME_PARAM": {
						"type": "string"
					},
					"DS_FILE_NAME_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().DS_FILE_NAME_PARAM",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().DS_CONTAINER_NAME_PARAM",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CLOUD_AWS_INPUT_S3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AWS_S3",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AmazonS3Location",
						"bucketName": "aws-s3-bucket-demo-ravi",
						"folderPath": "Allfiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "TotalChildren",
						"type": "String"
					},
					{
						"name": "YearlyIncome",
						"type": "String"
					},
					{
						"name": "EnglishEducation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AWS_S3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CONTAINER_METADATA_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_SOURCE_CONTAINER_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().DS_SOURCE_CONTAINER_PARAM",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CONTAINER_METADATA_OUTPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_OUTPUT_CONTAINER_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().DS_OUTPUT_CONTAINER_PARAM",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_COSMOS_OUTPUT_AZSQLDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_COSMOS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "sampleTable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_COSMOS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CREDIT_DATA_SINK_DF')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_KV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "CreditData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CSV_GEN2_COPY_BEHAVIOUR_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB_GEN2_SERVICE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "copybehaviourinput",
						"fileSystem": "datafactory"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "TotalChildren",
						"type": "String"
					},
					{
						"name": "YearlyIncome",
						"type": "String"
					},
					{
						"name": "EnglishEducation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB_GEN2_SERVICE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CSV_GEN2_COPY_BEHAVIOUR_OUTPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB_GEN2_SERVICE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "copybehaviouroutput",
						"fileSystem": "datafactory"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "TotalChildren",
						"type": "String"
					},
					{
						"name": "YearlyIncome",
						"type": "String"
					},
					{
						"name": "EnglishEducation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB_GEN2_SERVICE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DATA_INPUT_FOR_PIVOTING')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Data.csv",
						"fileSystem": "pivotabledata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Credit_ID",
						"type": "String"
					},
					{
						"name": "Card_Type",
						"type": "String"
					},
					{
						"name": "Credit_Name",
						"type": "String"
					},
					{
						"name": "Credit_Score",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_EVENT_TRIGGER_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB_KV",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_CONTAINER_NAME_PARAM": {
						"type": "string"
					},
					"DS_FILE_NAME_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().DS_FILE_NAME_PARAM",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().DS_CONTAINER_NAME_PARAM",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_EVENT_TRIGGER_OUTPUT_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_KV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "EventTriggerData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_FLATTERN_DATA_ORG_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "flatten_data.json",
						"fileSystem": "inputfordata"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"profit": {
							"type": "string"
						},
						"managment": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string"
									},
									"type": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GEN2_INNERJOIN_DATA_SINK_DATAFLOW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "dataflowpart3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GEN2_INPUT_CUSTOMER_DATA_SWTICH_CASE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "customersdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "TotalChildren",
						"type": "String"
					},
					{
						"name": "YearlyIncome",
						"type": "String"
					},
					{
						"name": "EnglishEducation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GEN2_INPUT_FOR_SNOWFLAKE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo.EmployeeTable.csv",
						"fileSystem": "selfhostedoutput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EmpID",
						"type": "String"
					},
					{
						"name": "EmpName",
						"type": "String"
					},
					{
						"name": "Location",
						"type": "String"
					},
					{
						"name": "LastModifyTime",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GEN2_INPUT_GET_FILES_WOUT_LPV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_GETFOLDER_FOR_FILES_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().DS_GETFOLDER_FOR_FILES_PARAM",
							"type": "Expression"
						},
						"fileSystem": "withoutlpv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GEN2_OUTPUT_SNOWFLAKE_TO_GEN2_ACTIVITIY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "snowflakeoutput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GEN2_PRODUCT_SINK_DATAFLOW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "dataflowpart2"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GEN2_SINK_FOLDER_FILE_WOUT_LPV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_SINK_FOLDER_WOUTLPV_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().DS_SINK_FOLDER_WOUTLPV_PARAM",
							"type": "Expression"
						},
						"fileSystem": "withoutlpvoutput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GEN2_SOURCE_CREDITCARD_DATA_DF')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Card Data",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "CreditCardData.xlsx",
						"fileSystem": "dataflowpart3"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Credit_ID",
						"type": "String"
					},
					{
						"name": "Card_Type",
						"type": "String"
					},
					{
						"name": "Credit_name",
						"type": "String"
					},
					{
						"name": "CredtiScore",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GETMETADATA_CSV_JSON_FILES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "inputcsvjson"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "TotalChildren",
						"type": "String"
					},
					{
						"name": "YearlyIncome",
						"type": "String"
					},
					{
						"name": "EnglishEducation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_INCREMENTAL_CONFIGDATA_MULTILOAD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_KV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TABLE_NAME",
						"type": "varchar"
					},
					{
						"name": "WaterMakr_Column",
						"type": "varchar"
					},
					{
						"name": "Table_Type",
						"type": "varchar"
					},
					{
						"name": "StoredProcedureForMigration",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "IncrementalLoad_ConfigTable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ON_PREMISE_SQL_SERVER_METADATA_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQLSERVER",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "TableName",
						"type": "varchar"
					},
					{
						"name": "SinkContainerName",
						"type": "varchar"
					},
					{
						"name": "StatusFlag",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "On_PremiseSQLTablesMetData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQLSERVER')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ORG_LIST_OUTPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_KV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "OrgListData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_RESTAPI_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_RESTAPI_JSON",
					"type": "LinkedServiceReference",
					"parameters": {
						"LS_SourceURL_Param": {
							"value": "@dataset().DS_RESTAPI_SOURCE_URL",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"DS_RESTAPI_SOURCE_URL": {
						"type": "string"
					},
					"DS_RESTAPI_SOURCE_URL_VALUE": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().DS_RESTAPI_SOURCE_URL_VALUE",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_RESTAPI_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SALESFORCE_INPTUT_METADATA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SALESFORCE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "metadata__c"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SALESFORCE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SINGLE_TABLE_INCREMENTAL_OUTPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB_KV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "incrementaloutput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SINK_CONTAINER_FILE_COPY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_SINK_CONTAINER_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().DS_SINK_CONTAINER_PARAM",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SINK_CUSTOMER_DATA_SWITCH_CASE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "customeroutputdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SINK_EMPLOYEE_DATA_SWITCH_CASE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "employeedataoutput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SINK_GEN2_NESTED_FOREACH_FOLDER_FILES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_FOLDER_SINK_NESTED_FOREACH_PARAM": {
						"type": "string"
					},
					"DS_FILES_SINK_NESTED_FOREACH_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().DS_FILES_SINK_NESTED_FOREACH_PARAM",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().DS_FOLDER_SINK_NESTED_FOREACH_PARAM",
							"type": "Expression"
						},
						"fileSystem": "nestedforeachoutput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SINK_PIVOTED_DATA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "pivotabledata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SINK_REST_API_GEN2_UNTIL_ACTIVITY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_SINK_FOLDER_NAME_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().DS_SINK_FOLDER_NAME_PARAM",
							"type": "Expression"
						},
						"fileSystem": "untilactivityoutput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SINK_UNPIVOTDATA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "pivotabledata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SNOWFALKE_INPUT_FOR_SNOWFLAKE_TO_GEN2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SNOWFLAKE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [
					{
						"name": "ID",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "NAME",
						"type": "VARCHAR",
						"precision": 50,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "SAMPLESCHEMA",
					"table": "SAMPLETABLE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SNOWFLAKE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SOURCE_CONTAINER_FILE_COPY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_SOURCE_CONTAINER_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().DS_SOURCE_CONTAINER_PARAM",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SOURCE_EMPLOYEE_DATA_SWITCH_CASE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "employeedata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "TotalChildren",
						"type": "String"
					},
					{
						"name": "YearlyIncome",
						"type": "String"
					},
					{
						"name": "EnglishEducation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SOURCE_GETFILE_LAST_MODIFIED_WOUT_LPV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_SOURCE_FOLDER_NAME_PARAM": {
						"type": "string"
					},
					"DS_SOURCE_FILE_NAME_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().DS_SOURCE_FILE_NAME_PARAM",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().DS_SOURCE_FOLDER_NAME_PARAM",
							"type": "Expression"
						},
						"fileSystem": "withoutlpv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SOURCE_INPUT_SALESFORCE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SALESFORCE",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_SOURCE_TABLE_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": {
						"value": "@dataset().DS_SOURCE_TABLE_PARAM",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SALESFORCE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SOURCE_REST_API_INPUT_UNTIL_ACTIVITY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_RESTAPI_JSON",
					"type": "LinkedServiceReference",
					"parameters": {
						"LS_SourceURL_Param": {
							"value": "@dataset().DS_SOURCE_URL_PARAM",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"DS_SOURCE_URL_PARAM": {
						"type": "string"
					},
					"DS_SOURCE_RELATIVE_URL_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().DS_SOURCE_RELATIVE_URL_PARAM",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_RESTAPI_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_SERVER_INPUT_MULTILOAD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQLSERVER",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_SOURCE_DATABASE_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().DS_SOURCE_DATABASE_PARAM",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQLSERVER')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_TUMBLING_WINDOW_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_WINDOW_STARTTIME_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@substring(replace(dataset().DS_WINDOW_STARTTIME_PARAM,'-','/'),0,10)",
							"type": "Expression"
						},
						"fileSystem": "tumblingwindow"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "TotalChildren",
						"type": "String"
					},
					{
						"name": "YearlyIncome",
						"type": "String"
					},
					{
						"name": "EnglishEducation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_TUMBLING_WINDOW_OUTPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZGEN2_DATAFACTORY",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_SINK_WINDOW_STARTTIME_PARAM": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_OUTPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@substring(replace(dataset().DS_SINK_WINDOW_STARTTIME_PARAM,'-','/'),0,10)",
							"type": "Expression"
						},
						"fileSystem": "tumblingoutput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZGEN2_DATAFACTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZBLOB_CONTAINER_INPUT_LAST_MODIFIED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZBLOB_KV",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_SOURCE_CONTAINER_NAME": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().DS_SOURCE_CONTAINER_NAME",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZBLOB_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQLSERVER_INPUT_QUERYFOR_INCREMENTALLOAD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQLSERVER",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MASTER_PROGRAM_INPUTS"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQLSERVER')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AWS_S3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AmazonS3",
				"typeProperties": {
					"serviceUrl": "",
					"accessKeyId": "[parameters('LS_AWS_S3_properties_typeProperties_accessKeyId')]",
					"secretAccessKey": {
						"type": "SecureString",
						"value": "[parameters('LS_AWS_S3_secretAccessKey')]"
					},
					"authenticationType": "AccessKey"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZBLOB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_AZBLOB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZBLOB_GEN2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_AZBLOB_GEN2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZBLOB_GEN2_SERVICE')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_AZBLOB_GEN2_SERVICE_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_AZBLOB_GEN2_SERVICE_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZBLOB_KV')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS_KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('LS_AZBLOB_KV_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZBLOB_SAS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('LS_AZBLOB_SAS_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZGEN2_DATAFACTORY')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_AZGEN2_DATAFACTORY_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_AZGEN2_DATAFACTORY_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZSQLDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_AZSQLDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZSQLDB_DESTINATION')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_AZSQLDB_DESTINATION_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZSQLDB_KV')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS_KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('LS_AZSQLDB_KV_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZUREDATABRICKS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3139825809203173.13.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('LS_AZUREDATABRICKS_accessToken')]"
					},
					"existingClusterId": "0728-103652-send656"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZVM_SQL_ON_PREMISE')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('LS_AZVM_SQL_ON_PREMISE_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SelfhostedintegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SelfhostedintegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureSynapseAnalytics')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('LS_AzureSynapseAnalytics_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_COSMOS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('LS_COSMOS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_FILESYSTEM_AZVM')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('LS_FILESYSTEM_AZVM_properties_typeProperties_host')]",
					"userId": "[parameters('LS_FILESYSTEM_AZVM_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_FILESYSTEM_AZVM_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SelfhostedintegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SelfhostedintegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_KeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('LS_KeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_RESTAPI_JSON')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"LS_SourceURL_Param": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_RESTAPI_JSON_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SALESFORCE')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Salesforce",
				"typeProperties": {
					"environmentUrl": "[parameters('LS_SALESFORCE_properties_typeProperties_environmentUrl')]",
					"username": "[parameters('LS_SALESFORCE_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_SALESFORCE_password')]"
					},
					"securityToken": {
						"type": "SecureString",
						"value": "[parameters('LS_SALESFORCE_securityToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SNOWFLAKE')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Snowflake",
				"typeProperties": {
					"connectionString": "[parameters('LS_SNOWFLAKE_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQLSERVER')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('LS_SQLSERVER_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SelfHostedOnPremiseRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SelfHostedOnPremiseRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_EVENT_TRIGGER')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_LAB_23_EVENT_TRIGGER_COPY_DATA_BLOB_TO_SQL",
							"type": "PipelineReference"
						},
						"parameters": {
							"PL_SOURCE_FOLDER_PARAM": "[parameters('TR_EVENT_TRIGGER_properties_PL_LAB_23_EVENT_TRIGGER_COPY_DATA_BLOB_TO_SQL_parameters_PL_SOURCE_FOLDER_PARAM')]",
							"PL_FILENAME_PARAM": "[parameters('TR_EVENT_TRIGGER_properties_PL_LAB_23_EVENT_TRIGGER_COPY_DATA_BLOB_TO_SQL_parameters_PL_FILENAME_PARAM')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/eventriggerinput/blobs/",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('TR_EVENT_TRIGGER_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_LAB_23_EVENT_TRIGGER_COPY_DATA_BLOB_TO_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_SCHEDULER')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_LAB_25_COPY_FILE_LOAD_INCRMENTALLY_LAST_MODIFIED_SCHEDULE_TRIGGER",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2021-06-16T05:40:00",
						"endTime": "2021-06-17T11:51:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								40
							],
							"hours": [
								5,
								6,
								7,
								8
							],
							"monthDays": [
								1,
								2,
								3,
								17,
								24,
								16,
								15
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_LAB_25_COPY_FILE_LOAD_INCRMENTALLY_LAST_MODIFIED_SCHEDULE_TRIGGER')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_TUMB')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "PL_LAB_24_CASE_01_TUMBLING_WINDOW_TRIGGER_WITHOUT_DEPENDENCY",
						"type": "PipelineReference"
					},
					"parameters": {
						"PL_WindowStartTime": "[parameters('TR_TUMB_properties_pipeline_parameters_PL_WindowStartTime')]",
						"PL_WindowEndTime": "[parameters('TR_TUMB_properties_pipeline_parameters_PL_WindowEndTime')]",
						"PL_TriggerTime": "[parameters('TR_TUMB_properties_pipeline_parameters_PL_TriggerTime')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2020-10-01T02:24:00Z",
					"endTime": "2020-10-04T06:24:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"offset": "-0.15:37:00",
							"referenceTrigger": {
								"referenceName": "TR_TUMBLING_WINDOW_PARENT",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_LAB_24_CASE_01_TUMBLING_WINDOW_TRIGGER_WITHOUT_DEPENDENCY')]",
				"[concat(variables('factoryId'), '/triggers/TR_TUMBLING_WINDOW_PARENT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_TUMBLING_WINDOW')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "PL_LAB_24_CASE_01_TUMBLING_WINDOW_TRIGGER_WITHOUT_DEPENDENCY",
						"type": "PipelineReference"
					},
					"parameters": {
						"PL_WindowStartTime": "[parameters('TR_TUMBLING_WINDOW_properties_pipeline_parameters_PL_WindowStartTime')]",
						"PL_WindowEndTime": "[parameters('TR_TUMBLING_WINDOW_properties_pipeline_parameters_PL_WindowEndTime')]",
						"PL_TriggerTime": "[parameters('TR_TUMBLING_WINDOW_properties_pipeline_parameters_PL_TriggerTime')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2020-10-01T08:45:00Z",
					"endTime": "2020-10-04T08:45:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_LAB_24_CASE_01_TUMBLING_WINDOW_TRIGGER_WITHOUT_DEPENDENCY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_TUMBLING_WINDOW_PARENT')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "PL_LAB_24_CASE_02_PIPELINE_DEPENDENCY",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2020-10-01T10:47:00Z",
					"endTime": "2020-10-04T08:45:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_LAB_24_CASE_02_PIPELINE_DEPENDENCY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LiftShiftSSISPackagesRunTime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"nodeSize": "Standard_D2_v3",
						"numberOfNodes": 2,
						"maxParallelExecutionsPerNode": 1
					},
					"ssisProperties": {
						"catalogInfo": {
							"catalogServerEndpoint": "[parameters('LiftShiftSSISPackagesRunTime_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint')]",
							"catalogAdminUserName": "[parameters('LiftShiftSSISPackagesRunTime_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName')]",
							"catalogAdminPassword": {
								"type": "SecureString",
								"value": "[parameters('LiftShiftSSISPackagesRunTime_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword')]"
							},
							"catalogPricingTier": "S1"
						},
						"edition": "Standard",
						"licenseType": "LicenseIncluded"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelfHostedOnPremiseRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelfhostedintegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF - AZSQLDB WITH UNION AND CONDITIONAL_SPLIT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "MASTER_DATAFACTORY_DATAFLOW"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_AZSQLDB_SOURCE_ONE_DF",
								"type": "DatasetReference"
							},
							"name": "EmployeeSource"
						},
						{
							"dataset": {
								"referenceName": "DS_AZSQLDB_SOURCE_TWO_DF",
								"type": "DatasetReference"
							},
							"name": "EmployeeSourcePartTwo"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_GEN2_INNERJOIN_DATA_SINK_DATAFLOW",
								"type": "DatasetReference"
							},
							"name": "Labdata"
						},
						{
							"dataset": {
								"referenceName": "DS_GEN2_INNERJOIN_DATA_SINK_DATAFLOW",
								"type": "DatasetReference"
							},
							"name": "ITData"
						},
						{
							"dataset": {
								"referenceName": "DS_GEN2_INNERJOIN_DATA_SINK_DATAFLOW",
								"type": "DatasetReference"
							},
							"name": "AccountData"
						}
					],
					"transformations": [
						{
							"name": "EmployeeDataUnion"
						},
						{
							"name": "ConditionalSplitByDepartment"
						}
					],
					"script": "source(output(\n\t\tEmpID as integer,\n\t\tEmpName as string,\n\t\tDesignation as string,\n\t\tDepartment as string,\n\t\tJoiningDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> EmployeeSource\nsource(output(\n\t\tEmpID as integer,\n\t\tEmpName as string,\n\t\tDesignation as string,\n\t\tDepartment as string,\n\t\tJoiningDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> EmployeeSourcePartTwo\nEmployeeSource, EmployeeSourcePartTwo union(byName: true)~> EmployeeDataUnion\nEmployeeDataUnion split(equals(Department,\"LAB\"),\n\tequals(Department,\"IT\"),\n\tdisjoint: false) ~> ConditionalSplitByDepartment@(LABData, ITData, Accounts)\nConditionalSplitByDepartment@LABData sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['LabData.csv'],\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> Labdata\nConditionalSplitByDepartment@ITData sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ITData.csv'],\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> ITData\nConditionalSplitByDepartment@Accounts sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['AccountsData.csv'],\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> AccountData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLDB_SOURCE_ONE_DF')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLDB_SOURCE_TWO_DF')]",
				"[concat(variables('factoryId'), '/datasets/DS_GEN2_INNERJOIN_DATA_SINK_DATAFLOW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF - AZSQLDB WITH UNION AND EXISTS TRANSFORMATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "MASTER_DATAFACTORY_DATAFLOW"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_AZSQLDB_SOURCE_ONE_DF",
								"type": "DatasetReference"
							},
							"name": "EmployeeSource"
						},
						{
							"dataset": {
								"referenceName": "DS_AZSQLDB_SOURCE_TWO_DF",
								"type": "DatasetReference"
							},
							"name": "EmployeeSourcePartTwo"
						},
						{
							"dataset": {
								"referenceName": "DS_AZSQLBD_COMPLETE_DF",
								"type": "DatasetReference"
							},
							"name": "EmployeeDataSinkForCheck"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_AZSQLBD_COMPLETE_DF",
								"type": "DatasetReference"
							},
							"name": "CompleteEmployeeSinkData"
						}
					],
					"transformations": [
						{
							"name": "EmployeeDataUnion"
						},
						{
							"name": "CheckForNotExistsOfData"
						}
					],
					"script": "source(output(\n\t\tEmpID as integer,\n\t\tEmpName as string,\n\t\tDesignation as string,\n\t\tDepartment as string,\n\t\tJoiningDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> EmployeeSource\nsource(output(\n\t\tEmpID as integer,\n\t\tEmpName as string,\n\t\tDesignation as string,\n\t\tDepartment as string,\n\t\tJoiningDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> EmployeeSourcePartTwo\nsource(output(\n\t\tEmpID as integer,\n\t\tEmpName as string,\n\t\tDesignation as string,\n\t\tDepartment as string,\n\t\tJoiningDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> EmployeeDataSinkForCheck\nEmployeeSource, EmployeeSourcePartTwo union(byName: true)~> EmployeeDataUnion\nEmployeeDataUnion, EmployeeDataSinkForCheck exists(EmployeeDataUnion@EmpID == EmployeeDataSinkForCheck@EmpID,\n\tnegate:true,\n\tbroadcast: 'auto')~> CheckForNotExistsOfData\nCheckForNotExistsOfData sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tEmpID as integer,\n\t\tEmpName as string,\n\t\tDesignation as string,\n\t\tDepartment as string,\n\t\tJoiningDate as timestamp\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> CompleteEmployeeSinkData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLDB_SOURCE_ONE_DF')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLDB_SOURCE_TWO_DF')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLBD_COMPLETE_DF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_AZGEN2_DB_JOIN_LOOKUP')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "MASTER_DATAFACTORY_DATAFLOW"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_AZGEN2_CUST_DATA_DF",
								"type": "DatasetReference"
							},
							"name": "CustData"
						},
						{
							"dataset": {
								"referenceName": "DS_AZGEN2_ORDER_DATA_DF",
								"type": "DatasetReference"
							},
							"name": "OrderData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_AZSQLDB_GEN_CUSTORDERS_DF",
								"type": "DatasetReference"
							},
							"name": "CustomerOrderData"
						}
					],
					"transformations": [
						{
							"name": "LookupBasedOnOrderID"
						},
						{
							"name": "SelectRenameCustColumns"
						},
						{
							"name": "SelectOrderData"
						},
						{
							"name": "AlterRowForDeleteInseert"
						}
					],
					"script": "source(output(\n\t\tCust_id as integer,\n\t\tCust_name as string,\n\t\tCust_Score as integer,\n\t\tOrder_id as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> CustData\nsource(output(\n\t\tOrder_ID as short,\n\t\tOrder_name as string,\n\t\tOrder_date as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> OrderData\nSelectRenameCustColumns, SelectOrderData lookup(Cust_Order_id == Order_Order_ID,\n\tmultiple: false,\n\tpickup: 'first',\n\tdesc(Order_name, true),\n\tbroadcast: 'auto')~> LookupBasedOnOrderID\nCustData select(mapColumn(\n\t\tCust_id,\n\t\tCust_name,\n\t\tCust_Score,\n\t\tCust_Order_id = Order_id\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRenameCustColumns\nOrderData select(mapColumn(\n\t\tOrder_Order_ID = Order_ID,\n\t\tOrder_name,\n\t\tOrder_date\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectOrderData\nLookupBasedOnOrderID alterRow(deleteIf(Cust_name==\"abd\"),\n\tinsertIf(1==1)) ~> AlterRowForDeleteInseert\nAlterRowForDeleteInseert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['Order_Order_ID','Cust_name'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tCust_id,\n\t\tCust_name,\n\t\tCust_Score,\n\t\tCust_Order_id,\n\t\tOrder_Order_ID,\n\t\tOrder_name,\n\t\tOrder_date\n\t)) ~> CustomerOrderData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZGEN2_CUST_DATA_DF')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZGEN2_ORDER_DATA_DF')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLDB_GEN_CUSTORDERS_DF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_AZGEN2_SQLDB_SCD_TYPE2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "MASTER_DATAFACTORY_DATAFLOW"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_GEN2_SCD_INPUT",
								"type": "DatasetReference"
							},
							"name": "Gen2CustomerData"
						},
						{
							"dataset": {
								"referenceName": "DS_AZSQL_DIM_CUST_SCDTYPE_2",
								"type": "DatasetReference"
							},
							"name": "DimCustomerTargetData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_AZSQL_DIM_CUST_SCDTYPE_2",
								"type": "DatasetReference"
							},
							"name": "DimCustomerInsert"
						},
						{
							"dataset": {
								"referenceName": "DS_AZSQL_DIM_CUST_SCDTYPE_2",
								"type": "DatasetReference"
							},
							"name": "DimCustomerHistory"
						},
						{
							"dataset": {
								"referenceName": "DS_AZSQL_DIM_CUST_SCDTYPE_2",
								"type": "DatasetReference"
							},
							"name": "DimCustomerUpdateInsert"
						}
					],
					"transformations": [
						{
							"name": "DVSurroagateKey"
						},
						{
							"name": "SelectRequiredTargetColumns"
						},
						{
							"name": "LookupForMatchingRecords"
						},
						{
							"name": "DCAction"
						},
						{
							"name": "DerivedColumnSystemColumns"
						},
						{
							"name": "ConditionalSplitbyAction"
						},
						{
							"name": "AlterRowForInsert"
						},
						{
							"name": "AlterRow1"
						},
						{
							"name": "DCOldRecordsSetToInActive"
						},
						{
							"name": "AlterRowForNewRecordsBasesOnUpdate"
						}
					],
					"script": "source(output(\n\t\tcust_id as integer,\n\t\tcustname as string,\n\t\tmanager as string,\n\t\tcity as string,\n\t\tphno as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Gen2CustomerData\nsource(output(\n\t\tsurrogate_key as long,\n\t\tcust_id as integer,\n\t\tcustname as string,\n\t\tmanager as string,\n\t\tcity as string,\n\t\tphno as long,\n\t\tstartdate as timestamp,\n\t\tenddate as timestamp,\n\t\tin_active as integer,\n\t\tcreated_date as timestamp,\n\t\tcreated_by as string,\n\t\tupdated_date as timestamp,\n\t\tupdated_by as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT * FROM Dbo.dim_cust_SCD2 WHERE in_active=1',\n\tformat: 'query') ~> DimCustomerTargetData\nGen2CustomerData derive(Surrogate_Key = crc32(concat(toString(cust_id),custname,manager,city,toString(phno)))) ~> DVSurroagateKey\nDimCustomerTargetData select(mapColumn(\n\t\ttgt_surrogate_key = surrogate_key,\n\t\ttgt_cust_id = cust_id,\n\t\ttgt_custname = custname,\n\t\ttgt_manager = manager,\n\t\ttgt_city = city,\n\t\ttgt_phno = phno\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRequiredTargetColumns\nDVSurroagateKey, SelectRequiredTargetColumns lookup(cust_id == tgt_cust_id,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupForMatchingRecords\nLookupForMatchingRecords derive(Action = iif(isNull(tgt_cust_id),\"I\",iif((Surrogate_Key!=tgt_surrogate_key),\"U\",\"NA\"))) ~> DCAction\nDCAction derive(startdate = currentTimestamp(),\n\t\tenddate = toDate(\"9999-12-31\",\"yyyy-MM-dd\"),\n\t\tin_active = 1,\n\t\tcreated_date = currentTimestamp(),\n\t\tcreated_by = \"Data Flows\",\n\t\tupdated_date = currentTimestamp(),\n\t\tupdated_by = \"Data Flows\") ~> DerivedColumnSystemColumns\nDerivedColumnSystemColumns split(Action==\"I\",\n\tAction==\"U\",\n\tdisjoint: false) ~> ConditionalSplitbyAction@(InsertRecords, UpdateSCDHistoryRecords)\nConditionalSplitbyAction@InsertRecords alterRow(insertIf(true())) ~> AlterRowForInsert\nConditionalSplitbyAction@UpdateSCDHistoryRecords alterRow(updateIf(true())) ~> AlterRow1\nAlterRow1 derive(in_active = 0,\n\t\tupdated_date = currentTimestamp(),\n\t\tupdated_by = \"Data Flow history\",\n\t\tenddate = currentTimestamp()) ~> DCOldRecordsSetToInActive\nConditionalSplitbyAction@UpdateSCDHistoryRecords alterRow(insertIf(true())) ~> AlterRowForNewRecordsBasesOnUpdate\nAlterRowForInsert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tsurrogate_key as long,\n\t\tcust_id as integer,\n\t\tcustname as string,\n\t\tmanager as string,\n\t\tcity as string,\n\t\tphno as long,\n\t\tstartdate as timestamp,\n\t\tenddate as timestamp,\n\t\tin_active as integer,\n\t\tcreated_date as timestamp,\n\t\tcreated_by as string,\n\t\tupdated_date as timestamp,\n\t\tupdated_by as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tsurrogate_key = Surrogate_Key,\n\t\tcust_id,\n\t\tcustname,\n\t\tmanager,\n\t\tcity,\n\t\tphno,\n\t\tstartdate,\n\t\tenddate,\n\t\tin_active,\n\t\tcreated_date,\n\t\tcreated_by,\n\t\tupdated_date,\n\t\tupdated_by\n\t)) ~> DimCustomerInsert\nDCOldRecordsSetToInActive sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tsurrogate_key as long,\n\t\tcust_id as integer,\n\t\tcustname as string,\n\t\tmanager as string,\n\t\tcity as string,\n\t\tphno as long,\n\t\tstartdate as timestamp,\n\t\tenddate as timestamp,\n\t\tin_active as integer,\n\t\tcreated_date as timestamp,\n\t\tcreated_by as string,\n\t\tupdated_date as timestamp,\n\t\tupdated_by as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['cust_id','surrogate_key'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tsurrogate_key = tgt_surrogate_key,\n\t\tcust_id = tgt_cust_id,\n\t\tenddate,\n\t\tin_active,\n\t\tupdated_date,\n\t\tupdated_by\n\t)) ~> DimCustomerHistory\nAlterRowForNewRecordsBasesOnUpdate sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tsurrogate_key as long,\n\t\tcust_id as integer,\n\t\tcustname as string,\n\t\tmanager as string,\n\t\tcity as string,\n\t\tphno as long,\n\t\tstartdate as timestamp,\n\t\tenddate as timestamp,\n\t\tin_active as integer,\n\t\tcreated_date as timestamp,\n\t\tcreated_by as string,\n\t\tupdated_date as timestamp,\n\t\tupdated_by as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tsurrogate_key = Surrogate_Key,\n\t\tcust_id,\n\t\tcustname,\n\t\tmanager,\n\t\tcity,\n\t\tphno,\n\t\tstartdate,\n\t\tenddate,\n\t\tin_active,\n\t\tcreated_date,\n\t\tcreated_by,\n\t\tupdated_date,\n\t\tupdated_by\n\t)) ~> DimCustomerUpdateInsert"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_GEN2_SCD_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_DIM_CUST_SCDTYPE_2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_AZGEN2_SQLDB_SCD_TYPE_ONE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "MASTER_DATAFACTORY_DATAFLOW"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_GEN2_SCD_INPUT",
								"type": "DatasetReference"
							},
							"name": "AzGenCustDataSCD"
						},
						{
							"dataset": {
								"referenceName": "DS_AZSQLDB_SCD",
								"type": "DatasetReference"
							},
							"name": "AZSQLDBDimCustomer"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_AZSQLDB_SCD",
								"type": "DatasetReference"
							},
							"name": "AZSQLDBSINKSCD"
						},
						{
							"dataset": {
								"referenceName": "DS_AZSQLDB_SCD",
								"type": "DatasetReference"
							},
							"name": "SinkForUpdateAZSQLDB"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumnSurrogateKey"
						},
						{
							"name": "LookupForMatchedNonMatchedData"
						},
						{
							"name": "RenamingSinkSQLDB"
						},
						{
							"name": "DerivedColumnForAction"
						},
						{
							"name": "ConditionalSplitByAction"
						},
						{
							"name": "AlterRowForInsert"
						},
						{
							"name": "DerivedColumnNew"
						},
						{
							"name": "SelectRequiredColumns"
						},
						{
							"name": "AlterRowForUpdate"
						},
						{
							"name": "DerivedColumnforUpdate"
						},
						{
							"name": "SelectRequiredColumnsForUpdate"
						}
					],
					"script": "source(output(\n\t\tcust_id as integer,\n\t\tcustname as string,\n\t\tmanager as string,\n\t\tcity as string,\n\t\tphno as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> AzGenCustDataSCD\nsource(output(\n\t\tsurrogate_key as long,\n\t\tcust_id as integer,\n\t\tcustname as string,\n\t\tmanager as string,\n\t\tcity as string,\n\t\tcreated_date as timestamp,\n\t\tcreated_by as string,\n\t\tupdated_date as timestamp,\n\t\tupdated_by as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> AZSQLDBDimCustomer\nAzGenCustDataSCD derive(Surrogate_key = crc32(concat(toString(cust_id),custname,manager,city,toString(phno)))) ~> DerivedColumnSurrogateKey\nDerivedColumnSurrogateKey, RenamingSinkSQLDB lookup(cust_id == Target_cust_id,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupForMatchedNonMatchedData\nAZSQLDBDimCustomer select(mapColumn(\n\t\tTarget_surrogate_key = surrogate_key,\n\t\tTarget_cust_id = cust_id,\n\t\tTarget_custname = custname,\n\t\tTarget_manager = manager,\n\t\tTarget_city = city,\n\t\tcreated_date,\n\t\tcreated_by,\n\t\tupdated_date,\n\t\tupdated_by\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenamingSinkSQLDB\nLookupForMatchedNonMatchedData derive(Action = iif(isNull(Target_cust_id),\"I\",iif((Surrogate_key!=Target_surrogate_key),\"U\",\"NA\"))) ~> DerivedColumnForAction\nDerivedColumnForAction split(Action==\"I\",\n\tAction==\"U\",\n\tdisjoint: false) ~> ConditionalSplitByAction@(NewRecords, UpdateRecords)\nConditionalSplitByAction@NewRecords alterRow(insertIf(true())) ~> AlterRowForInsert\nAlterRowForInsert derive(created_date = currentDate(),\n\t\tcreated_by = \"Data Flows\",\n\t\tupdated_date = currentDate(),\n\t\tupdated_by = \"Data Flows\") ~> DerivedColumnNew\nDerivedColumnNew select(mapColumn(\n\t\tcust_id,\n\t\tcustname,\n\t\tmanager,\n\t\tcity,\n\t\tphno,\n\t\tSurrogate_key,\n\t\tcreated_by,\n\t\tupdated_date,\n\t\tupdated_by,\n\t\tcreated_date\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRequiredColumns\nConditionalSplitByAction@UpdateRecords alterRow(updateIf(true())) ~> AlterRowForUpdate\nAlterRowForUpdate derive(updated_date = currentDate(),\n\t\tupdated_by = \"Data Flow Update\") ~> DerivedColumnforUpdate\nDerivedColumnforUpdate select(mapColumn(\n\t\tcust_id,\n\t\tcustname,\n\t\tmanager,\n\t\tcity,\n\t\tphno,\n\t\tSurrogate_key,\n\t\tupdated_date,\n\t\tupdated_by\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRequiredColumnsForUpdate\nSelectRequiredColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tsurrogate_key as long,\n\t\tcust_id as integer,\n\t\tcustname as string,\n\t\tmanager as string,\n\t\tcity as string,\n\t\tcreated_date as timestamp,\n\t\tcreated_by as string,\n\t\tupdated_date as timestamp,\n\t\tupdated_by as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tsurrogate_key = Surrogate_key,\n\t\tcust_id,\n\t\tcustname,\n\t\tmanager,\n\t\tcity,\n\t\tcreated_date,\n\t\tcreated_by,\n\t\tupdated_date,\n\t\tupdated_by\n\t)) ~> AZSQLDBSINKSCD\nSelectRequiredColumnsForUpdate sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tsurrogate_key as long,\n\t\tcust_id as integer,\n\t\tcustname as string,\n\t\tmanager as string,\n\t\tcity as string,\n\t\tcreated_date as timestamp,\n\t\tcreated_by as string,\n\t\tupdated_date as timestamp,\n\t\tupdated_by as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['cust_id'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tsurrogate_key = Surrogate_key,\n\t\tcust_id,\n\t\tcustname,\n\t\tmanager,\n\t\tcity,\n\t\tupdated_date,\n\t\tupdated_by\n\t)) ~> SinkForUpdateAZSQLDB"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_GEN2_SCD_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLDB_SCD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_AZSQLDB_GEN2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "MASTER_DATAFACTORY_DATAFLOW"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_AZSQL_SOURCE_FOR_DATAFLOW",
								"type": "DatasetReference"
							},
							"name": "SalesOrderDetails"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_AZGEN2_SINK_DATAFLOW",
								"type": "DatasetReference"
							},
							"name": "LoadDataIntoGen2"
						}
					],
					"transformations": [
						{
							"name": "AddTotalSlaes"
						},
						{
							"name": "SortByTotalSales"
						}
					],
					"script": "source(output(\n\t\tSalesOrderID as integer,\n\t\tSalesOrderDetailID as integer,\n\t\tOrderQty as integer,\n\t\tProductID as integer,\n\t\tUnitPrice as decimal(19,4),\n\t\tUnitPriceDiscount as decimal(19,4),\n\t\tLineTotal as decimal(38,6),\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SalesOrderDetails\nSalesOrderDetails derive(TotalSales = UnitPrice*OrderQty) ~> AddTotalSlaes\nAddTotalSlaes sort(desc(TotalSales, true)) ~> SortByTotalSales\nSortByTotalSales sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> LoadDataIntoGen2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_SOURCE_FOR_DATAFLOW')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZGEN2_SINK_DATAFLOW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_AZSQLDB_GEN2_AGGREGATE_DERIVED')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "MASTER_DATAFACTORY_DATAFLOW"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_AZSQL_TABLE_PRODUCT_SOURCE_DATAFLOW",
								"type": "DatasetReference"
							},
							"name": "ProductData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_GEN2_PRODUCT_SINK_DATAFLOW",
								"type": "DatasetReference"
							},
							"name": "ProductSinkData"
						},
						{
							"dataset": {
								"referenceName": "DS_GEN2_PRODUCT_SINK_DATAFLOW",
								"type": "DatasetReference"
							},
							"name": "ProductSinkAggregateData"
						}
					],
					"transformations": [
						{
							"name": "AddTotalCost"
						},
						{
							"name": "AggregateDataByColor"
						}
					],
					"script": "source(output(\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as decimal(19,4),\n\t\tListPrice as decimal(19,4),\n\t\tSize as string,\n\t\tWeight as decimal(8,2),\n\t\tProductCategoryID as integer,\n\t\tProductModelID as integer,\n\t\tSellStartDate as timestamp,\n\t\tSellEndDate as timestamp,\n\t\tDiscontinuedDate as timestamp,\n\t\tThumbNailPhoto as binary,\n\t\tThumbnailPhotoFileName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tpartitionBy('hash', 1)) ~> ProductData\nProductData derive(Totalcost = StandardCost+ListPrice) ~> AddTotalCost\nProductData aggregate(groupBy(Color),\n\tTotalStandardCost = sum(StandardCost),\n\t\tTotalListPrice = sum(ListPrice)) ~> AggregateDataByColor\nAddTotalCost sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ProductSinkData.csv'],\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> ProductSinkData\nAggregateDataByColor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ProductAggregateData.csv'],\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> ProductSinkAggregateData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_TABLE_PRODUCT_SOURCE_DATAFLOW')]",
				"[concat(variables('factoryId'), '/datasets/DS_GEN2_PRODUCT_SINK_DATAFLOW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_AZSQLDB_GEN2_FULLOUTER_JOIN')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "MASTER_DATAFACTORY_DATAFLOW"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_AZSQL_TABLE_PRODUCT_SOURCE_DATAFLOW",
								"type": "DatasetReference"
							},
							"name": "ProductDataSource"
						},
						{
							"dataset": {
								"referenceName": "DS_AZSQL_SOURCE_FOR_DATAFLOW",
								"type": "DatasetReference"
							},
							"name": "SalesOrderDetails"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_GEN2_INNERJOIN_DATA_SINK_DATAFLOW",
								"type": "DatasetReference"
							},
							"name": "FulllOuterJoinSinkData"
						}
					],
					"transformations": [
						{
							"name": "FullJoinedData"
						},
						{
							"name": "SelectRequiredColumnsInnerJoinData"
						}
					],
					"script": "source(output(\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as decimal(19,4),\n\t\tListPrice as decimal(19,4),\n\t\tSize as string,\n\t\tWeight as decimal(8,2),\n\t\tProductCategoryID as integer,\n\t\tProductModelID as integer,\n\t\tSellStartDate as timestamp,\n\t\tSellEndDate as timestamp,\n\t\tDiscontinuedDate as timestamp,\n\t\tThumbNailPhoto as binary,\n\t\tThumbnailPhotoFileName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ProductDataSource\nsource(output(\n\t\tSalesOrderID as integer,\n\t\tSalesOrderDetailID as integer,\n\t\tOrderQty as integer,\n\t\tProductID as integer,\n\t\tUnitPrice as decimal(19,4),\n\t\tUnitPriceDiscount as decimal(19,4),\n\t\tLineTotal as decimal(38,6),\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SalesOrderDetails\nProductDataSource, SalesOrderDetails join(ProductDataSource@ProductID == SalesOrderDetails@ProductID,\n\tjoinType:'outer',\n\tbroadcast: 'auto')~> FullJoinedData\nFullJoinedData select(mapColumn(\n\t\tProductID = ProductDataSource@ProductID,\n\t\tName,\n\t\tProductNumber,\n\t\tColor,\n\t\tStandardCost,\n\t\tListPrice,\n\t\tSize,\n\t\tWeight,\n\t\tProductCategoryID,\n\t\tProductModelID,\n\t\tSalesOrderID,\n\t\tSalesOrderDetailID,\n\t\tOrderQty,\n\t\tProductID = SalesOrderDetails@ProductID,\n\t\tUnitPrice,\n\t\tUnitPriceDiscount,\n\t\tLineTotal,\n\t\trowguid = SalesOrderDetails@rowguid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRequiredColumnsInnerJoinData\nSelectRequiredColumnsInnerJoinData sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['FulllOuterJoinSinkData.csv'],\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> FulllOuterJoinSinkData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_TABLE_PRODUCT_SOURCE_DATAFLOW')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_SOURCE_FOR_DATAFLOW')]",
				"[concat(variables('factoryId'), '/datasets/DS_GEN2_INNERJOIN_DATA_SINK_DATAFLOW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_AZSQLDB_GEN2_INNER_JOIN')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "MASTER_DATAFACTORY_DATAFLOW"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_AZSQL_TABLE_PRODUCT_SOURCE_DATAFLOW",
								"type": "DatasetReference"
							},
							"name": "ProductDataSource"
						},
						{
							"dataset": {
								"referenceName": "DS_AZSQL_SOURCE_FOR_DATAFLOW",
								"type": "DatasetReference"
							},
							"name": "SalesOrderDetails"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_GEN2_INNERJOIN_DATA_SINK_DATAFLOW",
								"type": "DatasetReference"
							},
							"name": "InnerJoinSinkData"
						}
					],
					"transformations": [
						{
							"name": "InnerJoinedData"
						},
						{
							"name": "SelectRequiredColumnsInnerJoinData"
						}
					],
					"script": "source(output(\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as decimal(19,4),\n\t\tListPrice as decimal(19,4),\n\t\tSize as string,\n\t\tWeight as decimal(8,2),\n\t\tProductCategoryID as integer,\n\t\tProductModelID as integer,\n\t\tSellStartDate as timestamp,\n\t\tSellEndDate as timestamp,\n\t\tDiscontinuedDate as timestamp,\n\t\tThumbNailPhoto as binary,\n\t\tThumbnailPhotoFileName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ProductDataSource\nsource(output(\n\t\tSalesOrderID as integer,\n\t\tSalesOrderDetailID as integer,\n\t\tOrderQty as integer,\n\t\tProductID as integer,\n\t\tUnitPrice as decimal(19,4),\n\t\tUnitPriceDiscount as decimal(19,4),\n\t\tLineTotal as decimal(38,6),\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SalesOrderDetails\nProductDataSource, SalesOrderDetails join(ProductDataSource@ProductID == SalesOrderDetails@ProductID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> InnerJoinedData\nInnerJoinedData select(mapColumn(\n\t\tProductID = ProductDataSource@ProductID,\n\t\tName,\n\t\tProductNumber,\n\t\tColor,\n\t\tStandardCost,\n\t\tListPrice,\n\t\tSize,\n\t\tWeight,\n\t\tProductCategoryID,\n\t\tProductModelID,\n\t\tSalesOrderID,\n\t\tSalesOrderDetailID,\n\t\tOrderQty,\n\t\tProductID = SalesOrderDetails@ProductID,\n\t\tUnitPrice,\n\t\tUnitPriceDiscount,\n\t\tLineTotal,\n\t\trowguid = SalesOrderDetails@rowguid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRequiredColumnsInnerJoinData\nSelectRequiredColumnsInnerJoinData sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['InnerJoinSinkData.csv'],\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> InnerJoinSinkData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_TABLE_PRODUCT_SOURCE_DATAFLOW')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_SOURCE_FOR_DATAFLOW')]",
				"[concat(variables('factoryId'), '/datasets/DS_GEN2_INNERJOIN_DATA_SINK_DATAFLOW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_AZSQLDB_GEN2_LEFT_JOIN')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "MASTER_DATAFACTORY_DATAFLOW"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_AZSQL_TABLE_PRODUCT_SOURCE_DATAFLOW",
								"type": "DatasetReference"
							},
							"name": "ProductDataSource"
						},
						{
							"dataset": {
								"referenceName": "DS_AZSQL_SOURCE_FOR_DATAFLOW",
								"type": "DatasetReference"
							},
							"name": "SalesOrderDetails"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_GEN2_INNERJOIN_DATA_SINK_DATAFLOW",
								"type": "DatasetReference"
							},
							"name": "LeftJoinSinkData"
						}
					],
					"transformations": [
						{
							"name": "LeftJoinedData"
						},
						{
							"name": "SelectRequiredColumnsInnerJoinData"
						}
					],
					"script": "source(output(\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as decimal(19,4),\n\t\tListPrice as decimal(19,4),\n\t\tSize as string,\n\t\tWeight as decimal(8,2),\n\t\tProductCategoryID as integer,\n\t\tProductModelID as integer,\n\t\tSellStartDate as timestamp,\n\t\tSellEndDate as timestamp,\n\t\tDiscontinuedDate as timestamp,\n\t\tThumbNailPhoto as binary,\n\t\tThumbnailPhotoFileName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ProductDataSource\nsource(output(\n\t\tSalesOrderID as integer,\n\t\tSalesOrderDetailID as integer,\n\t\tOrderQty as integer,\n\t\tProductID as integer,\n\t\tUnitPrice as decimal(19,4),\n\t\tUnitPriceDiscount as decimal(19,4),\n\t\tLineTotal as decimal(38,6),\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SalesOrderDetails\nProductDataSource, SalesOrderDetails join(ProductDataSource@ProductID == SalesOrderDetails@ProductID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> LeftJoinedData\nLeftJoinedData select(mapColumn(\n\t\tProductID = ProductDataSource@ProductID,\n\t\tName,\n\t\tProductNumber,\n\t\tColor,\n\t\tStandardCost,\n\t\tListPrice,\n\t\tSize,\n\t\tWeight,\n\t\tProductCategoryID,\n\t\tProductModelID,\n\t\tSalesOrderID,\n\t\tSalesOrderDetailID,\n\t\tOrderQty,\n\t\tProductID = SalesOrderDetails@ProductID,\n\t\tUnitPrice,\n\t\tUnitPriceDiscount,\n\t\tLineTotal,\n\t\trowguid = SalesOrderDetails@rowguid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRequiredColumnsInnerJoinData\nSelectRequiredColumnsInnerJoinData sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['LeftJoinSinkData.csv'],\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> LeftJoinSinkData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_TABLE_PRODUCT_SOURCE_DATAFLOW')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_SOURCE_FOR_DATAFLOW')]",
				"[concat(variables('factoryId'), '/datasets/DS_GEN2_INNERJOIN_DATA_SINK_DATAFLOW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_AZSQLDB_GEN2_RIGHT_JOIN')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "MASTER_DATAFACTORY_DATAFLOW"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_AZSQL_TABLE_PRODUCT_SOURCE_DATAFLOW",
								"type": "DatasetReference"
							},
							"name": "ProductDataSource"
						},
						{
							"dataset": {
								"referenceName": "DS_AZSQL_SOURCE_FOR_DATAFLOW",
								"type": "DatasetReference"
							},
							"name": "SalesOrderDetails"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_GEN2_INNERJOIN_DATA_SINK_DATAFLOW",
								"type": "DatasetReference"
							},
							"name": "RightJoinSinkData"
						}
					],
					"transformations": [
						{
							"name": "RightJoinedData"
						},
						{
							"name": "SelectRequiredColumnsInnerJoinData"
						}
					],
					"script": "source(output(\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as decimal(19,4),\n\t\tListPrice as decimal(19,4),\n\t\tSize as string,\n\t\tWeight as decimal(8,2),\n\t\tProductCategoryID as integer,\n\t\tProductModelID as integer,\n\t\tSellStartDate as timestamp,\n\t\tSellEndDate as timestamp,\n\t\tDiscontinuedDate as timestamp,\n\t\tThumbNailPhoto as binary,\n\t\tThumbnailPhotoFileName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ProductDataSource\nsource(output(\n\t\tSalesOrderID as integer,\n\t\tSalesOrderDetailID as integer,\n\t\tOrderQty as integer,\n\t\tProductID as integer,\n\t\tUnitPrice as decimal(19,4),\n\t\tUnitPriceDiscount as decimal(19,4),\n\t\tLineTotal as decimal(38,6),\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SalesOrderDetails\nProductDataSource, SalesOrderDetails join(ProductDataSource@ProductID == SalesOrderDetails@ProductID,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> RightJoinedData\nRightJoinedData select(mapColumn(\n\t\tProductID = ProductDataSource@ProductID,\n\t\tName,\n\t\tProductNumber,\n\t\tColor,\n\t\tStandardCost,\n\t\tListPrice,\n\t\tSize,\n\t\tWeight,\n\t\tProductCategoryID,\n\t\tProductModelID,\n\t\tSalesOrderID,\n\t\tSalesOrderDetailID,\n\t\tOrderQty,\n\t\tProductID = SalesOrderDetails@ProductID,\n\t\tUnitPrice,\n\t\tUnitPriceDiscount,\n\t\tLineTotal,\n\t\trowguid = SalesOrderDetails@rowguid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRequiredColumnsInnerJoinData\nSelectRequiredColumnsInnerJoinData sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['RightJoinedData.csv'],\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> RightJoinSinkData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_TABLE_PRODUCT_SOURCE_DATAFLOW')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_SOURCE_FOR_DATAFLOW')]",
				"[concat(variables('factoryId'), '/datasets/DS_GEN2_INNERJOIN_DATA_SINK_DATAFLOW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_FALTTERN_TRANSFORMATIO_HIGH_PROFIT_RANK')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "MASTER_DATAFACTORY_DATAFLOW"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_FLATTERN_DATA_ORG_INPUT",
								"type": "DatasetReference"
							},
							"name": "SourceFlatterndataOrg"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_AZSQL_TOPPERS_PROFIT_ORG",
								"type": "DatasetReference"
							},
							"name": "sqltableToppersData"
						},
						{
							"dataset": {
								"referenceName": "DS_ORG_LIST_OUTPUT",
								"type": "DatasetReference"
							},
							"name": "orglistinfordata"
						}
					],
					"transformations": [
						{
							"name": "FlattenOrgData"
						},
						{
							"name": "RankbyProfit"
						},
						{
							"name": "Consplit"
						}
					],
					"script": "source(output(\n\t\tid as string,\n\t\ttype as string,\n\t\tname as string,\n\t\tprofit as string,\n\t\tmanagment as (id as string, type as string)[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'arrayOfDocuments') ~> SourceFlatterndataOrg\nSourceFlatterndataOrg foldDown(unroll(managment),\n\tmapColumn(\n\t\tid,\n\t\ttype,\n\t\tname,\n\t\tprofit,\n\t\t{managment.id} = managment.id,\n\t\t{managment.type} = managment.type\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenOrgData\nFlattenOrgData rank(desc(profit, true),\n\toutput(Rank as long),\n\tdense: true) ~> RankbyProfit\nRankbyProfit split(Rank==1,\n\tdisjoint: true) ~> Consplit@(MainLevel, OrganizationList)\nConsplit@MainLevel sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sqltableToppersData\nConsplit@OrganizationList sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> orglistinfordata"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_FLATTERN_DATA_ORG_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_TOPPERS_PROFIT_ORG')]",
				"[concat(variables('factoryId'), '/datasets/DS_ORG_LIST_OUTPUT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_GEN2_REMOVE_DUPLICATES_STORE_SUMMARY')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "MASTER_DATAFACTORY_DATAFLOW"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_GEN2_SOURCE_CREDITCARD_DATA_DF",
								"type": "DatasetReference"
							},
							"name": "CreditCardData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_GEN2_INNERJOIN_DATA_SINK_DATAFLOW",
								"type": "DatasetReference"
							},
							"name": "UniquedataCreditData"
						},
						{
							"dataset": {
								"referenceName": "DS_AZSQLDB_TOPPERSDATA",
								"type": "DatasetReference"
							},
							"name": "ToppersData"
						},
						{
							"dataset": {
								"referenceName": "DS_CREDIT_DATA_SINK_DF",
								"type": "DatasetReference"
							},
							"name": "CreditData"
						}
					],
					"transformations": [
						{
							"name": "SortCreditCardData"
						},
						{
							"name": "WindowForRowNumber"
						},
						{
							"name": "FilterRemoveDuplicates"
						},
						{
							"name": "SelectRequiredColumn"
						},
						{
							"name": "WindowGroupByCardType"
						},
						{
							"name": "ConditionalSplitByDenseRank"
						},
						{
							"name": "SelectColumnsFromToopersData"
						},
						{
							"name": "SelectCreditData"
						}
					],
					"script": "source(output(\n\t\tCredit_ID as string,\n\t\tCard_Type as string,\n\t\tCredit_name as string,\n\t\tCredtiScore as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> CreditCardData\nCreditCardData sort(asc(Credit_ID, true),\n\tasc(Card_Type, true)) ~> SortCreditCardData\nSortCreditCardData window(over(Credit_ID,\n\t\tCard_Type,\n\t\tCredit_name,\n\t\tCredtiScore),\n\tasc(Credit_ID, true),\n\tRow_Number = rowNumber()) ~> WindowForRowNumber\nWindowForRowNumber filter(Row_Number==1) ~> FilterRemoveDuplicates\nFilterRemoveDuplicates select(mapColumn(\n\t\tCredit_ID,\n\t\tCard_Type,\n\t\tCredit_name,\n\t\tCredtiScore\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRequiredColumn\nFilterRemoveDuplicates window(over(Card_Type),\n\tdesc(CredtiScore, true),\n\tGen_Rank = rank(),\n\t\tGen_DesnseRank = denseRank(),\n\t\tRanK_RowNumber = rowNumber()) ~> WindowGroupByCardType\nWindowGroupByCardType split(Gen_DesnseRank==1,\n\tdisjoint: false) ~> ConditionalSplitByDenseRank@(ToppersData, CreditData)\nConditionalSplitByDenseRank@ToppersData select(mapColumn(\n\t\tCredit_ID,\n\t\tCard_Type,\n\t\tCredit_name,\n\t\tCredtiScore,\n\t\tRow_Number,\n\t\tGen_Rank,\n\t\tGen_DesnseRank,\n\t\tRanK_RowNumber\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumnsFromToopersData\nConditionalSplitByDenseRank@CreditData select(mapColumn(\n\t\tCredit_ID,\n\t\tCard_Type,\n\t\tCredit_name,\n\t\tCredtiScore,\n\t\tRow_Number,\n\t\tGen_Rank,\n\t\tGen_DesnseRank,\n\t\tRanK_RowNumber\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCreditData\nSelectRequiredColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['UniqueCreditCardData'],\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> UniquedataCreditData\nSelectColumnsFromToopersData sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ToppersData\nSelectCreditData sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> CreditData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_GEN2_SOURCE_CREDITCARD_DATA_DF')]",
				"[concat(variables('factoryId'), '/datasets/DS_GEN2_INNERJOIN_DATA_SINK_DATAFLOW')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLDB_TOPPERSDATA')]",
				"[concat(variables('factoryId'), '/datasets/DS_CREDIT_DATA_SINK_DF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_PIVOT_TRANSFORMATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "MASTER_DATAFACTORY_DATAFLOW"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_DATA_INPUT_FOR_PIVOTING",
								"type": "DatasetReference"
							},
							"name": "CreditCardData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SINK_PIVOTED_DATA",
								"type": "DatasetReference"
							},
							"name": "PivotData"
						}
					],
					"transformations": [
						{
							"name": "CreditCardPivot"
						},
						{
							"name": "MapDrifted",
							"description": "Creates an explicit mapping for each drifted column"
						}
					],
					"script": "source(output(\n\t\tCredit_ID as short,\n\t\tCard_Type as string,\n\t\tCredit_Name as string,\n\t\tCredit_Score as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: true,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false) ~> CreditCardData\nCreditCardData pivot(groupBy(Credit_ID,\n\t\tCredit_Name),\n\tpivotBy(Card_Type),\n\t{} = sum(Credit_Score),\n\tcolumnNaming: '$N$V',\n\tlateral: true) ~> CreditCardPivot\nCreditCardPivot derive(Master = toLong(byName('Master')),\n\t\tvisa = toLong(byName('visa'))) ~> MapDrifted\nMapDrifted sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['PivotedData.csv'],\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> PivotData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DATA_INPUT_FOR_PIVOTING')]",
				"[concat(variables('factoryId'), '/datasets/DS_SINK_PIVOTED_DATA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_UNPivoted_Transformation')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "MASTER_DATAFACTORY_DATAFLOW"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DF_SOURCE_PIVOTDATA",
								"type": "DatasetReference"
							},
							"name": "PivotedData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SINK_UNPIVOTDATA",
								"type": "DatasetReference"
							},
							"name": "UnPivotedCreditCardData"
						}
					],
					"transformations": [
						{
							"name": "Unpivot"
						}
					],
					"script": "source(output(\n\t\tCredit_ID as short,\n\t\tCredit_Name as string,\n\t\tMaster as short,\n\t\tvisa as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> PivotedData\nPivotedData unpivot(output(\n\t\tCredit_Type as string,\n\t\tCredit_Score as short\n\t),\n\tungroupBy(Credit_ID,\n\t\tCredit_Name),\n\tlateral: true,\n\tignoreNullPivots: false) ~> Unpivot\nUnpivot sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['UnPivotedCreditCardData.csv'],\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> UnPivotedCreditCardData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DF_SOURCE_PIVOTDATA')]",
				"[concat(variables('factoryId'), '/datasets/DS_SINK_UNPIVOTDATA')]"
			]
		}
	]
}